/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/wwa_main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/wwa_main.ts":
/*!*************************!*\
  !*** ./src/wwa_main.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var postMessage_noWorker = function (e) { };\nvar wwa_main;\n(function (wwa_main) {\n    var KeyCode = wwa_input.KeyCode;\n    var KeyState = wwa_input.KeyState;\n    var KeyStore = wwa_input.KeyStore;\n    var MouseState = wwa_input.MouseState;\n    var MouseStore = wwa_input.MouseStore;\n    var CGManager = wwa_cgmanager.CGManager;\n    var Consts = wwa_data.WWAConsts;\n    var Coord = wwa_data.Coord;\n    var Position = wwa_data.Position;\n    var Camera = wwa_camera.Camera;\n    var util = wwa_util;\n    var wwa;\n    function getProgress(current, total, stage) {\n        var progress = new wwa_data.LoaderProgress();\n        progress.current = current;\n        progress.total = total;\n        progress.stage = stage;\n        return progress;\n    }\n    wwa_main.getProgress = getProgress;\n    var WWA = (function () {\n        function WWA(mapFileName, workerFileName, urlgateEnabled, titleImgName, classicModeEnabled, audioDirectory) {\n            if (urlgateEnabled === void 0) { urlgateEnabled = false; }\n            if (audioDirectory === void 0) { audioDirectory = \"\"; }\n            var _this = this;\n            var ctxCover;\n            window.addEventListener(\"click\", function (e) {\n                _this._isActive = false;\n            });\n            wwa_util.$id(\"wwa-wrapper\").addEventListener(\"click\", function (e) {\n                e.stopPropagation();\n                _this._isActive = true;\n            });\n            this._isActive = true;\n            if (titleImgName === null) {\n                this._hasTitleImg = false;\n                this._cvsCover = util.$id(\"progress-panel\");\n                ctxCover = this._cvsCover.getContext(\"2d\");\n                ctxCover.fillStyle = \"rgb(0, 0, 0)\";\n            }\n            else {\n                this._hasTitleImg = true;\n            }\n            try {\n                if (this._hasTitleImg) {\n                    util.$id(\"version\").textContent = \"WWA Wing Ver.\" + Consts.VERSION_WWAJS;\n                }\n                else {\n                    this._setLoadingMessage(ctxCover, 0);\n                }\n            }\n            catch (e) { }\n            this._isURLGateEnable = urlgateEnabled;\n            this._isClassicModeEnable = classicModeEnabled;\n            this._mainCallCounter = 0;\n            this._animationCounter = 0;\n            this._statusPressCounter = new wwa_data.Status(0, 0, 0, 0);\n            if (!audioDirectory) {\n                audioDirectory = \"./audio/\";\n            }\n            else if (audioDirectory[audioDirectory.length - 1] !== \"/\") {\n                audioDirectory += \"/\";\n            }\n            this._audioDirectory = audioDirectory;\n            var t_start = new Date().getTime();\n            var isLocal = !!location.href.match(/^file/);\n            if (isLocal) {\n                alert(\"【警告】直接HTMLファイルを開いているようです。\\n\" +\n                    \"このプログラムは正常に動作しない可能性があります。\\n\" +\n                    \"マップデータの確認を行う場合には同梱の「WWA Debugger」をご利用ください。\");\n            }\n            if (window[\"audiojs\"] === void 0) {\n                this._setErrorMessage(\"Audio.jsのロードに失敗しました。\\n\" +\n                    \"フォルダ\" + this._audioDirectory + \"の中にaudio.min.jsは配置されていますか？ \\n\" +\n                    \"フォルダを変更される場合には data-wwa-audio-dir 属性を\\n\" +\n                    \"指定してください\", ctxCover);\n                return;\n            }\n            this._loadHandler = function (e) {\n                if (e.data.error !== null && e.data.error !== void 0) {\n                    _this._setErrorMessage(\"下記のエラーが発生しました。: \\n\" + e.data.error.message, ctxCover);\n                    return;\n                }\n                if (e.data.progress !== null && e.data.progress !== void 0) {\n                    _this._setProgressBar(e.data.progress);\n                    return;\n                }\n                _this._wwaData = e.data.wwaData;\n                try {\n                    if (_this._hasTitleImg) {\n                        util.$id(\"version\").textContent += (\" (Map data Ver. \"\n                            + Math.floor(_this._wwaData.version / 10) + \".\" +\n                            +_this._wwaData.version % 10 + \")\");\n                    }\n                    else {\n                        _this._setLoadingMessage(ctxCover, 1);\n                    }\n                }\n                catch (e) { }\n                _this.initCSSRule();\n                _this._setProgressBar(getProgress(0, 4, wwa_data.LoadStage.GAME_INIT));\n                _this._setLoadingMessage(ctxCover, 2);\n                var cgFile = new Image();\n                cgFile.src = _this._wwaData.mapCGName;\n                cgFile.addEventListener(\"error\", function () {\n                    _this._setErrorMessage(\"画像ファイル「\" + _this._wwaData.mapCGName + \"」が見つかりませんでした。\\n\" +\n                        \"管理者の方へ: データがアップロードされているか、\\n\" +\n                        \"パーミッションを確かめてください。\", ctxCover);\n                });\n                _this._restartData = JSON.parse(JSON.stringify(_this._wwaData));\n                var escapedFilename = _this._wwaData.mapCGName.replace(\"(\", \"\\\\(\").replace(\")\", \"\\\\)\");\n                Array.prototype.forEach.call(util.$qsAll(\"div.item-cell\"), function (node) {\n                    node.style.backgroundPosition = \"-40px -80px\";\n                    node.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                });\n                Array.prototype.forEach.call(util.$qsAll(\"div.wide-cell-row\"), function (node) {\n                    node.style.backgroundPosition = \"-160px -120px\";\n                    node.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                });\n                Array.prototype.forEach.call(util.$qsAll(\".item-cell>.item-click-border\"), function (node) {\n                    node.style.backgroundImage = \"url('\" + Consts.ITEM_BORDER_IMG_DATA_URL + \"')\";\n                    node.style.backgroundPosition = \"0 0\";\n                    node.style.display = \"none\";\n                    node.style.cursor = \"pointer\";\n                });\n                Array.prototype.forEach.call(util.$qsAll(\".item-cell>.item-disp\"), function (node) {\n                    node.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                });\n                var iconNode_energy = util.$qsh(\"#disp-energy>.status-icon\");\n                iconNode_energy.style.backgroundPosition = \"-120px -80px\";\n                iconNode_energy.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                var iconNode_strength = util.$qsh(\"#disp-strength>.status-icon\");\n                iconNode_strength.style.backgroundPosition = \"-160px -80px\";\n                iconNode_strength.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                var iconNode_defence = util.$qsh(\"#disp-defence>.status-icon\");\n                iconNode_defence.style.backgroundPosition = \"-200px -80px\";\n                iconNode_defence.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                var iconNode_gold = util.$qsh(\"#disp-gold>.status-icon\");\n                iconNode_gold.style.backgroundPosition = \"-240px -80px\";\n                iconNode_gold.style.backgroundImage = \"url(\" + escapedFilename + \")\";\n                _this._setProgressBar(getProgress(1, 4, wwa_data.LoadStage.GAME_INIT));\n                _this._setLoadingMessage(ctxCover, 3);\n                _this._replaceAllRandomObjects();\n                var t_end = new Date().getTime();\n                console.log(\"Loading Complete!\" + (t_end - t_start) + \"ms\");\n                _this._cvs = util.$id(\"wwa-map\");\n                _this._cvsSub = util.$id(\"wwa-map-sub\");\n                var ctx = _this._cvs.getContext(\"2d\");\n                var ctxSub = _this._cvsSub.getContext(\"2d\");\n                ctx.fillStyle = \"rgba( 255, 255, 255, 0.5)\";\n                ctx.fillRect(0, 0, 440, 440);\n                var playerPosition = new Position(_this, _this._wwaData.playerX, _this._wwaData.playerY);\n                _this._camera = new Camera(playerPosition);\n                var status = new wwa_data.Status(_this._wwaData.statusEnergy, _this._wwaData.statusStrength, _this._wwaData.statusDefence, _this._wwaData.statusGold);\n                _this._player = new wwa_parts_player.Player(_this, playerPosition, _this._camera, status, _this._wwaData.statusEnergyMax);\n                _this._objectMovingDataManager = new wwa_motion.ObjectMovingDataManager(_this, _this._player);\n                _this._camera.setPlayer(_this._player);\n                _this._keyStore = new KeyStore();\n                _this._mouseStore = new MouseStore();\n                _this._messageQueue = [];\n                _this._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                _this._yesNoJudgeInNextFrame = wwa_data.YesNoState.UNSELECTED;\n                _this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.NONE;\n                _this._prevFrameEventExected = false;\n                _this._lastMessage = new wwa_message.MessageInfo(\"\", false, false, []);\n                _this._execMacroListInNextFrame = [];\n                _this._passwordLoadExecInNextFrame = false;\n                _this._setProgressBar(getProgress(2, 4, wwa_data.LoadStage.GAME_INIT));\n                _this._setLoadingMessage(ctxCover, 4);\n                window.addEventListener(\"keydown\", function (e) {\n                    if (!_this._isActive) {\n                        return;\n                    }\n                    _this._keyStore.setPressInfo(e.keyCode);\n                    if (e.keyCode === KeyCode.KEY_F5) {\n                        e.preventDefault();\n                        return;\n                    }\n                    if (!_this._player.isWaitingMessage()) {\n                        if (!_this._player.isWaitingPasswordWindow()) {\n                            if (e.keyCode === KeyCode.KEY_DOWN ||\n                                e.keyCode === KeyCode.KEY_LEFT ||\n                                e.keyCode === KeyCode.KEY_RIGHT ||\n                                e.keyCode === KeyCode.KEY_UP ||\n                                e.keyCode === KeyCode.KEY_SHIFT ||\n                                e.keyCode === KeyCode.KEY_ENTER ||\n                                e.keyCode === KeyCode.KEY_1 ||\n                                e.keyCode === KeyCode.KEY_2 ||\n                                e.keyCode === KeyCode.KEY_3 ||\n                                e.keyCode === KeyCode.KEY_A ||\n                                e.keyCode === KeyCode.KEY_C ||\n                                e.keyCode === KeyCode.KEY_D ||\n                                e.keyCode === KeyCode.KEY_E ||\n                                e.keyCode === KeyCode.KEY_M ||\n                                e.keyCode === KeyCode.KEY_N ||\n                                e.keyCode === KeyCode.KEY_Q ||\n                                e.keyCode === KeyCode.KEY_S ||\n                                e.keyCode === KeyCode.KEY_W ||\n                                e.keyCode === KeyCode.KEY_X ||\n                                e.keyCode === KeyCode.KEY_Y ||\n                                e.keyCode === KeyCode.KEY_Z ||\n                                e.keyCode === KeyCode.KEY_ESC ||\n                                e.keyCode === KeyCode.KEY_F1 ||\n                                e.keyCode === KeyCode.KEY_F2 ||\n                                e.keyCode === KeyCode.KEY_F3 ||\n                                e.keyCode === KeyCode.KEY_F4 ||\n                                e.keyCode === KeyCode.KEY_F6 ||\n                                e.keyCode === KeyCode.KEY_F7 ||\n                                e.keyCode === KeyCode.KEY_F8 ||\n                                e.keyCode === KeyCode.KEY_F12 ||\n                                e.keyCode === KeyCode.KEY_SPACE) {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                    else {\n                        if (e.keyCode === KeyCode.KEY_DOWN ||\n                            e.keyCode === KeyCode.KEY_LEFT ||\n                            e.keyCode === KeyCode.KEY_RIGHT ||\n                            e.keyCode === KeyCode.KEY_UP ||\n                            e.keyCode === KeyCode.KEY_SHIFT ||\n                            e.keyCode === KeyCode.KEY_ENTER ||\n                            e.keyCode === KeyCode.KEY_ESC ||\n                            e.keyCode === KeyCode.KEY_SPACE) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n                window.addEventListener(\"keyup\", function (e) {\n                    if (!_this._isActive) {\n                        return;\n                    }\n                    _this._keyStore.setReleaseInfo(e.keyCode);\n                    if (e.keyCode === KeyCode.KEY_F5) {\n                        e.preventDefault();\n                    }\n                    else if (e.keyCode === KeyCode.KEY_DOWN ||\n                        e.keyCode === KeyCode.KEY_LEFT ||\n                        e.keyCode === KeyCode.KEY_RIGHT ||\n                        e.keyCode === KeyCode.KEY_UP ||\n                        e.keyCode === KeyCode.KEY_SHIFT ||\n                        e.keyCode === KeyCode.KEY_ENTER ||\n                        e.keyCode === KeyCode.KEY_1 ||\n                        e.keyCode === KeyCode.KEY_2 ||\n                        e.keyCode === KeyCode.KEY_3 ||\n                        e.keyCode === KeyCode.KEY_A ||\n                        e.keyCode === KeyCode.KEY_C ||\n                        e.keyCode === KeyCode.KEY_D ||\n                        e.keyCode === KeyCode.KEY_E ||\n                        e.keyCode === KeyCode.KEY_M ||\n                        e.keyCode === KeyCode.KEY_N ||\n                        e.keyCode === KeyCode.KEY_Q ||\n                        e.keyCode === KeyCode.KEY_S ||\n                        e.keyCode === KeyCode.KEY_W ||\n                        e.keyCode === KeyCode.KEY_X ||\n                        e.keyCode === KeyCode.KEY_Y ||\n                        e.keyCode === KeyCode.KEY_Z ||\n                        e.keyCode === KeyCode.KEY_ESC ||\n                        e.keyCode === KeyCode.KEY_F1 ||\n                        e.keyCode === KeyCode.KEY_F3 ||\n                        e.keyCode === KeyCode.KEY_F4 ||\n                        e.keyCode === KeyCode.KEY_F6 ||\n                        e.keyCode === KeyCode.KEY_F7 ||\n                        e.keyCode === KeyCode.KEY_F8 ||\n                        e.keyCode === KeyCode.KEY_F12 ||\n                        e.keyCode === KeyCode.KEY_SPACE) {\n                        if (!_this._player.isWaitingMessage() && !_this._player.isWaitingPasswordWindow()) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n                window.addEventListener(\"blur\", function (e) {\n                    _this._keyStore.allClear();\n                    _this._mouseStore.clear();\n                });\n                window.addEventListener(\"contextmenu\", function (e) {\n                    _this._keyStore.allClear();\n                    _this._mouseStore.clear();\n                });\n                window.addEventListener(\"help\", function (e) {\n                    if (!_this._isActive) {\n                        return;\n                    }\n                    e.preventDefault();\n                });\n                _this._wwaWrapperElement = (wwa_util.$id(\"wwa-wrapper\"));\n                _this._mouseControllerElement = (wwa_util.$id(\"wwa-controller\"));\n                _this._mouseControllerElement.addEventListener(\"mousedown\", function (e) {\n                    if (!_this._isActive) {\n                        return;\n                    }\n                    if (e.which === 1) {\n                        if (_this._mouseStore.getMouseState() !== wwa_input.MouseState.NONE) {\n                            e.preventDefault();\n                            return;\n                        }\n                        var mousePos = wwa_util.$localPos(e.clientX, e.clientY);\n                        var playerPos = _this._player.getDrawingCenterPosition();\n                        var dist = mousePos.substract(playerPos);\n                        var dx = Math.abs(dist.x);\n                        var dy = Math.abs(dist.y);\n                        var dir;\n                        if (dist.y > 0 && dy > dx) {\n                            dir = wwa_data.Direction.DOWN;\n                        }\n                        else if (dist.y < 0 && dy > dx) {\n                            dir = wwa_data.Direction.UP;\n                        }\n                        else if (dist.x > 0 && dy < dx) {\n                            dir = wwa_data.Direction.RIGHT;\n                        }\n                        else if (dist.x < 0 && dy < dx) {\n                            dir = wwa_data.Direction.LEFT;\n                        }\n                        _this._mouseStore.setPressInfo(dir);\n                        e.preventDefault();\n                    }\n                });\n                _this._mouseControllerElement.addEventListener(\"mouseleave\", function (e) {\n                    _this._mouseStore.clear();\n                });\n                _this._mouseControllerElement.addEventListener(\"mouseup\", function (e) {\n                    if (!_this._isActive) {\n                        return;\n                    }\n                    if (e.which === 1) {\n                        _this._mouseStore.setReleaseInfo();\n                        e.preventDefault();\n                    }\n                });\n                if (window[\"TouchEvent\"]) {\n                    _this._mouseControllerElement.addEventListener(\"touchstart\", function (e) {\n                        if (!_this._isActive) {\n                            return;\n                        }\n                        if (_this._mouseStore.getMouseState() !== wwa_input.MouseState.NONE) {\n                            e.preventDefault();\n                            return;\n                        }\n                        var mousePos = wwa_util.$localPos(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n                        var playerPos = _this._player.getDrawingCenterPosition();\n                        var dist = mousePos.substract(playerPos);\n                        var dx = Math.abs(dist.x);\n                        var dy = Math.abs(dist.y);\n                        var dir;\n                        if (dist.y > 0 && dy > dx) {\n                            dir = wwa_data.Direction.DOWN;\n                        }\n                        else if (dist.y < 0 && dy > dx) {\n                            dir = wwa_data.Direction.UP;\n                        }\n                        else if (dist.x > 0 && dy < dx) {\n                            dir = wwa_data.Direction.RIGHT;\n                        }\n                        else if (dist.x < 0 && dy < dx) {\n                            dir = wwa_data.Direction.LEFT;\n                        }\n                        _this._mouseStore.setPressInfo(dir, e.changedTouches[0].identifier);\n                        if (e.cancelable) {\n                            e.preventDefault();\n                        }\n                    });\n                    _this._mouseControllerElement.addEventListener(\"touchend\", function (e) {\n                        if (!_this._isActive) {\n                            return;\n                        }\n                        for (var i = 0; i < e.changedTouches.length; i++) {\n                            if (_this._mouseStore.getTouchID() === e.changedTouches[i].identifier) {\n                                _this._mouseStore.setReleaseInfo();\n                                e.preventDefault();\n                                break;\n                            }\n                        }\n                    });\n                    _this._mouseControllerElement.addEventListener(\"touchcancel\", function (e) {\n                        if (!_this._isActive) {\n                            return;\n                        }\n                        for (var i = 0; i < e.changedTouches.length; i++) {\n                            if (_this._mouseStore.getTouchID() === e.changedTouches[i].identifier) {\n                                _this._mouseStore.setReleaseInfo();\n                                e.preventDefault();\n                                break;\n                            }\n                        }\n                    });\n                }\n                util.$id(\"button-load\").addEventListener(\"click\", function () {\n                    if (_this._player.isControllable()) {\n                        _this.onselectbutton(wwa_data.SidebarButton.QUICK_LOAD);\n                    }\n                });\n                util.$id(\"button-save\").addEventListener(\"click\", function () {\n                    if (_this._player.isControllable()) {\n                        _this.onselectbutton(wwa_data.SidebarButton.QUICK_SAVE);\n                    }\n                });\n                util.$id(\"button-restart\").addEventListener(\"click\", function () {\n                    if (_this._player.isControllable()) {\n                        _this.onselectbutton(wwa_data.SidebarButton.RESTART_GAME);\n                    }\n                });\n                util.$id(\"button-gotowwa\").addEventListener(\"click\", function () {\n                    if (_this._player.isControllable()) {\n                        _this.onselectbutton(wwa_data.SidebarButton.GOTO_WWA);\n                    }\n                });\n                Array.prototype.forEach.call(util.$qsAll(\".wide-cell-row\"), function (node) {\n                    node.addEventListener(\"click\", function () {\n                        _this._displayHelp();\n                    });\n                });\n                _this._frameCoord = new Coord(Consts.IMGPOS_DEFAULT_FRAME_X, Consts.IMGPOS_DEFAULT_YESNO_Y);\n                _this._battleEffectCoord = new Coord(Consts.IMGPOS_DEFAULT_BATTLE_EFFECT_X, Consts.IMGPOS_DEFAULT_BATTLE_EFFECT_Y);\n                _this._battleEstimateWindow = new wwa_estimate_battle.BattleEstimateWindow(_this, _this._wwaData.mapCGName, wwa_util.$id(\"wwa-wrapper\"));\n                _this._passwordWindow = new wwa_password_window.PasswordWindow(_this, wwa_util.$id(\"wwa-wrapper\"));\n                _this._messageWindow = new wwa_message.MessageWindow(_this, 50, 180, 340, 0, \"\", _this._wwaData.mapCGName, false, true, util.$id(\"wwa-wrapper\"));\n                _this._monsterWindow = new wwa_message.MosterWindow(_this, new Coord(50, 180), 340, 60, false, util.$id(\"wwa-wrapper\"), _this._wwaData.mapCGName);\n                _this._scoreWindow = new wwa_message.ScoreWindow(_this, new Coord(50, 50), false, util.$id(\"wwa-wrapper\"));\n                _this._setProgressBar(getProgress(3, 4, wwa_data.LoadStage.GAME_INIT));\n                _this._isLoadedSound = false;\n                _this._temporaryInputDisable = false;\n                _this._paintSkipByDoorOpen = false;\n                _this._clearFacesInNextFrame = false;\n                _this._useConsole = false;\n                _this.clearFaces();\n                var self = _this;\n                _this._cgManager = new CGManager(ctx, ctxSub, _this._wwaData.mapCGName, function () {\n                    _this._isSkippedSoundMessage = true;\n                    if (_this._wwaData.systemMessage[wwa_data.SystemMessage2.LOAD_SE] === \"ON\") {\n                        _this._isLoadedSound = true;\n                        _this.setMessageQueue(\"ゲームを開始します。\\n画面をクリックしてください。\\n\" +\n                            \"※iOS, Android端末では、音楽は再生されないことがあります。\", false, true);\n                        _this._setLoadingMessage(ctxCover, wwa_data.LoadStage.AUDIO);\n                        _this.loadSound();\n                        setTimeout(_this.soundCheckCaller, Consts.DEFAULT_FRAME_INTERVAL, _this);\n                        return;\n                    }\n                    else if (_this._wwaData.systemMessage[wwa_data.SystemMessage2.LOAD_SE] === \"OFF\") {\n                        _this._isLoadedSound = false;\n                        _this.setMessageQueue(\"ゲームを開始します。\\n画面をクリックしてください。\", false, true);\n                        _this.openGameWindow();\n                        return;\n                    }\n                    _this._isSkippedSoundMessage = false;\n                    if (!_this._hasTitleImg) {\n                        ctxCover.clearRect(0, 0, Consts.SCREEN_WIDTH, Consts.SCREEN_HEIGHT);\n                    }\n                    _this._messageWindow.setMessage((_this._wwaData.systemMessage[wwa_data.SystemMessage2.LOAD_SE] === \"\" ?\n                        \"効果音・ＢＧＭデータをロードしますか？\" :\n                        _this._wwaData.systemMessage[wwa_data.SystemMessage2.LOAD_SE]) + \"\\n※iOS, Android端末では、選択に関わらず音楽が再生されないことがあります。\");\n                    _this._messageWindow.show();\n                    _this._setProgressBar(getProgress(4, 4, wwa_data.LoadStage.GAME_INIT));\n                    var timer = setInterval(function () {\n                        self._keyStore.update();\n                        if (self._yesNoJudgeInNextFrame === wwa_data.YesNoState.UNSELECTED) {\n                            if (self._keyStore.getKeyState(KeyCode.KEY_ENTER) === KeyState.KEYDOWN ||\n                                self._keyStore.getKeyState(KeyCode.KEY_Y) === KeyState.KEYDOWN) {\n                                self._yesNoJudgeInNextFrame = wwa_data.YesNoState.YES;\n                            }\n                            else if (self._keyStore.getKeyState(KeyCode.KEY_N) === KeyState.KEYDOWN ||\n                                self._keyStore.getKeyState(KeyCode.KEY_ESC) === KeyState.KEYDOWN) {\n                                self._yesNoJudgeInNextFrame = wwa_data.YesNoState.NO;\n                            }\n                        }\n                        if (self._yesNoJudgeInNextFrame === wwa_data.YesNoState.YES) {\n                            clearInterval(timer);\n                            self._messageWindow.update();\n                            self._yesNoJudge = self._yesNoJudgeInNextFrame;\n                            self._messageWindow.setInputDisable();\n                            setTimeout(function () {\n                                self._messageWindow.update();\n                                setTimeout(function () {\n                                    self._messageWindow.hide();\n                                    self._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                                    self._yesNoJudgeInNextFrame = wwa_data.YesNoState.UNSELECTED;\n                                    self._isLoadedSound = true;\n                                    _this._setLoadingMessage(ctxCover, wwa_data.LoadStage.AUDIO);\n                                    self.loadSound();\n                                    setTimeout(_this.soundCheckCaller, Consts.DEFAULT_FRAME_INTERVAL, _this);\n                                }, Consts.YESNO_PRESS_DISP_FRAME_NUM * Consts.DEFAULT_FRAME_INTERVAL);\n                            }, Consts.DEFAULT_FRAME_INTERVAL);\n                        }\n                        else if (self._yesNoJudgeInNextFrame === wwa_data.YesNoState.NO) {\n                            clearInterval(timer);\n                            self._messageWindow.update();\n                            self._yesNoJudge = self._yesNoJudgeInNextFrame;\n                            self._messageWindow.setInputDisable();\n                            setTimeout(function () {\n                                self._messageWindow.update();\n                                setTimeout(function () {\n                                    self._messageWindow.hide();\n                                    self._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                                    self._yesNoJudgeInNextFrame = wwa_data.YesNoState.UNSELECTED;\n                                    self._isLoadedSound = false;\n                                    self.openGameWindow();\n                                }, Consts.YESNO_PRESS_DISP_FRAME_NUM * Consts.DEFAULT_FRAME_INTERVAL);\n                            }, Consts.DEFAULT_FRAME_INTERVAL);\n                        }\n                    }, Consts.DEFAULT_FRAME_INTERVAL);\n                });\n            };\n            if (wwap_mode || Worker === void 0) {\n                var script;\n                if (!external_script_inject_mode) {\n                    script = document.createElement(\"script\");\n                    if (wwap_mode) {\n                        script.src = Consts.WWAP_SERVER + \"/\" + Consts.WWAP_SERVER_LOADER_NO_WORKER;\n                    }\n                    else {\n                        script.src = \"wwaload.noworker.js\";\n                    }\n                    document.getElementsByTagName(\"head\")[0].appendChild(script);\n                }\n                else {\n                    script = document.getElementById(\"wwaloader-ex\");\n                    if (!script.src.match(/^http:\\/\\/wwawing\\.com/) &&\n                        !script.src.match(/^http:\\/\\/www\\.wwawing\\.com/) &&\n                        !script.src.match(/^https:\\/\\/wwaphoenix\\.github\\.io/) &&\n                        !script.src.match(/^https:\\/\\/www\\.wwaphoenix\\.github\\.io/)) {\n                        throw new Error(\"SCRIPT ORIGIN ERROR\");\n                    }\n                }\n                var self1 = this;\n                postMessage_noWorker = function (e) {\n                    self1._loadHandler(e);\n                };\n                try {\n                    loader_start({\n                        data: {\n                            fileName: mapFileName + \"?date=\" + t_start\n                        }\n                    });\n                }\n                catch (e) {\n                    script.onload = function () {\n                        loader_start({\n                            data: {\n                                fileName: mapFileName + \"?date=\" + t_start\n                            }\n                        });\n                    };\n                }\n            }\n            else {\n                try {\n                    var loadWorker = new Worker(workerFileName + \"?date=\" + t_start);\n                    loadWorker.postMessage({ \"fileName\": mapFileName + \"?date=\" + t_start });\n                    loadWorker.addEventListener(\"message\", this._loadHandler);\n                }\n                catch (e) {\n                    alert(\"マップデータのロード時のエラーが発生しました。:\\nWebWorkerの生成に失敗しました。\" + e.message);\n                    return;\n                }\n            }\n        }\n        WWA.prototype._setProgressBar = function (progress) {\n            if (!this._hasTitleImg) {\n                return;\n            }\n            if (progress.stage <= Consts.LOAD_STAGE_MAX_EXCEPT_AUDIO) {\n                (wwa_util.$id(\"progress-message-container\")).textContent =\n                    (progress.stage === Consts.LOAD_STAGE_MAX_EXCEPT_AUDIO ? \"World Name: \" + this._wwaData.worldName : wwa_data.loadMessages[progress.stage]);\n                (wwa_util.$id(\"progress-bar\")).style.width =\n                    (1 * progress.stage + (progress.current / progress.total) * 1) / (Consts.LOAD_STAGE_MAX_EXCEPT_AUDIO + 1) * Consts.MAP_WINDOW_WIDTH + \"px\";\n                (wwa_util.$id(\"progress-disp\")).textContent =\n                    ((1 * progress.stage + (progress.current / progress.total) * 1) / (Consts.LOAD_STAGE_MAX_EXCEPT_AUDIO + 1) * 100).toFixed(2) + \"%\";\n            }\n            else {\n                (wwa_util.$id(\"progress-message-container\")).textContent = \"効果音/BGMを読み込んでいます。(スペースキーでスキップ）\";\n                (wwa_util.$id(\"progress-bar-audio\")).style.width =\n                    (progress.current * Consts.MAP_WINDOW_WIDTH / progress.total) + \"px\";\n                (wwa_util.$id(\"progress-disp\")).textContent =\n                    ((progress.current / progress.total * 100).toFixed(2)) + \"%\";\n            }\n        };\n        WWA.prototype._setLoadingMessage = function (ctx, mode) {\n            if (this._hasTitleImg) {\n                return;\n            }\n            if (mode <= 0) {\n                ctx.font = wwa_data.LoadingMessageSize.TITLE + \"px \" + Consts.LOADING_FONT;\n                ctx.fillText(wwa_data.loadMessagesClassic[0], wwa_data.LoadingMessagePosition.TITLE_X, wwa_data.LoadingMessagePosition.TITLE_Y);\n                ctx.font = wwa_data.LoadingMessageSize.FOOTER + \"px \" + Consts.LOADING_FONT;\n                ctx.fillText(\"WWA Wing Ver.\" + Consts.VERSION_WWAJS, wwa_data.LoadingMessagePosition.FOOTER_X, wwa_data.LoadingMessagePosition.COPYRIGHT_Y);\n            }\n            else if (mode <= wwa_data.loadMessagesClassic.length) {\n                ctx.font = wwa_data.LoadingMessageSize.LOADING + \"px \" + Consts.LOADING_FONT;\n                if (mode >= 2) {\n                    ctx.clearRect(wwa_data.LoadingMessagePosition.LOADING_X, wwa_data.LoadingMessagePosition.LOADING_Y + (wwa_data.LoadingMessagePosition.LINE * (mode - 3)), Consts.SCREEN_WIDTH - wwa_data.LoadingMessagePosition.LOADING_X, wwa_data.LoadingMessagePosition.LINE);\n                    ctx.fillText(wwa_data.loadMessagesClassic[mode - 1] + \" Complete!\", wwa_data.LoadingMessagePosition.LOADING_X, wwa_data.LoadingMessagePosition.LOADING_Y + (wwa_data.LoadingMessagePosition.LINE * (mode - 2)));\n                }\n                if (mode < wwa_data.loadMessagesClassic.length) {\n                    ctx.fillText(wwa_data.loadMessagesClassic[mode], wwa_data.LoadingMessagePosition.LOADING_X, wwa_data.LoadingMessagePosition.LOADING_Y + (wwa_data.LoadingMessagePosition.LINE * (mode - 1)));\n                }\n                if (mode == 1) {\n                    ctx.font = wwa_data.LoadingMessageSize.FOOTER + \"px \" + Consts.LOADING_FONT;\n                    ctx.fillText(\"World Name  \" + this._wwaData.worldName, wwa_data.LoadingMessagePosition.FOOTER_X, wwa_data.LoadingMessagePosition.WORLD_Y);\n                    ctx.fillText(\" (Map data Ver. \" + Math.floor(this._wwaData.version / 10) + \".\" + this._wwaData.version % 10 + \")\", wwa_data.LoadingMessagePosition.FOOTER_X, wwa_data.LoadingMessagePosition.WORLD_Y + wwa_data.LoadingMessagePosition.LINE);\n                }\n            }\n            else {\n                var messageY;\n                if (this._isSkippedSoundMessage) {\n                    messageY = wwa_data.LoadingMessagePosition.LOADING_Y + (wwa_data.LoadingMessagePosition.LINE * (wwa_data.loadMessagesClassic.length - 1));\n                }\n                else {\n                    messageY = wwa_data.LoadingMessagePosition.FOOTER_Y;\n                }\n                if (mode <= wwa_data.LoadStage.AUDIO) {\n                    ctx.fillText(\"Now Sound data Loading .....\", wwa_data.LoadingMessagePosition.LOADING_X, messageY);\n                }\n                else {\n                    ctx.clearRect(wwa_data.LoadingMessagePosition.LOADING_X, messageY - wwa_data.LoadingMessagePosition.LINE, Consts.SCREEN_WIDTH - wwa_data.LoadingMessagePosition.LOADING_X, wwa_data.LoadingMessagePosition.LINE);\n                    ctx.fillText(\"Now Sound data Loading ..... Complete!\", wwa_data.LoadingMessagePosition.LOADING_X, messageY);\n                }\n            }\n        };\n        WWA.prototype._setErrorMessage = function (message, ctx) {\n            if (this._hasTitleImg) {\n                alert(message);\n            }\n            else {\n                ctx.clearRect(0, 0, Consts.SCREEN_WIDTH, Consts.SCREEN_HEIGHT);\n                ctx.font = wwa_data.LoadingMessageSize.ERRROR + \"px \" + Consts.LOADING_FONT;\n                var errorMessage = message.split('\\n');\n                errorMessage.forEach(function (line, i) {\n                    ctx.fillText(line, wwa_data.LoadingMessagePosition.ERROR_X, wwa_data.LoadingMessagePosition.ERROR_Y + (wwa_data.LoadingMessagePosition.LINE * i));\n                });\n            }\n        };\n        WWA.prototype.createAudioJSInstance = function (idx, isSub) {\n            if (isSub === void 0) { isSub = false; }\n            if (idx === 0 || this._audioJSInstances[idx] !== void 0 || idx === wwa_data.SystemSound.NO_SOUND) {\n                return;\n            }\n            var file = (wwap_mode ? Consts.WWAP_SERVER + \"/\" + Consts.WWAP_SERVER_AUDIO_DIR + \"/\" + idx + \".mp3\" : this._audioDirectory + idx + \".mp3\");\n            var audioElement = new Audio(file);\n            audioElement.preload = \"auto\";\n            if (idx >= wwa_data.SystemSound.BGM_LB) {\n                audioElement.loop = true;\n            }\n            util.$id(\"wwa-audio-wrapper\").appendChild(audioElement);\n            this._audioJSInstances[idx] = audiojs.create(audioElement);\n            if (idx < wwa_data.SystemSound.BGM_LB) {\n                var audioElementSub = new Audio(file);\n                audioElementSub.preload = \"auto\";\n                util.$id(\"wwa-audio-wrapper\").appendChild(audioElementSub);\n                this._audioJSInstancesSub[idx] = audiojs.create(audioElementSub);\n            }\n        };\n        WWA.prototype.loadSound = function () {\n            this._audioJSInstances = new Array(Consts.SOUND_MAX + 1);\n            this._audioJSInstancesSub = new Array(Consts.SOUND_MAX + 1);\n            this.createAudioJSInstance(wwa_data.SystemSound.DECISION);\n            this.createAudioJSInstance(wwa_data.SystemSound.ATTACK);\n            for (var pid = 1; pid < this._wwaData.mapPartsMax; pid++) {\n                var idx = this._wwaData.mapAttribute[pid][Consts.ATR_SOUND];\n                this.createAudioJSInstance(idx);\n            }\n            for (var pid = 1; pid < this._wwaData.objPartsMax; pid++) {\n                if (this._wwaData.objectAttribute[pid][Consts.ATR_TYPE] === Consts.OBJECT_RANDOM) {\n                    continue;\n                }\n                var idx = this._wwaData.objectAttribute[pid][Consts.ATR_SOUND];\n                this.createAudioJSInstance(idx);\n            }\n            this._wwaData.bgm = 0;\n            this._soundLoadSkipFlag = false;\n        };\n        WWA.prototype.checkAllSoundLoaded = function () {\n            var loadedNum = 0;\n            var total = 0;\n            if (!this._hasTitleImg) {\n                var ctxCover = this._cvsCover.getContext(\"2d\");\n            }\n            this._keyStore.update();\n            if (this._keyStore.getKeyState(wwa_input.KeyCode.KEY_SPACE) === wwa_input.KeyState.KEYDOWN) {\n                this._soundLoadSkipFlag = true;\n            }\n            for (var i = 1; i <= Consts.SOUND_MAX; i++) {\n                if (this._audioJSInstances[i] === void 0) {\n                    continue;\n                }\n                if (this._audioJSInstances[i].wrapper.classList.contains(\"error\")) {\n                    continue;\n                }\n                total++;\n                if (this._audioJSInstances[i].wrapper.classList.contains(\"loading\")) {\n                    continue;\n                }\n                loadedNum++;\n            }\n            if (loadedNum < total && !this._soundLoadSkipFlag) {\n                this._setProgressBar(getProgress(loadedNum, total, wwa_data.LoadStage.AUDIO));\n                setTimeout(this.soundCheckCaller, Consts.DEFAULT_FRAME_INTERVAL, this);\n                return;\n            }\n            this._setProgressBar(getProgress(Consts.SOUND_MAX, Consts.SOUND_MAX, wwa_data.LoadStage.AUDIO));\n            this._setLoadingMessage(ctxCover, wwa_data.LoadStage.FINISH);\n            this.openGameWindow();\n        };\n        WWA.prototype.playSound = function (id) {\n            var _this = this;\n            if (!this._isLoadedSound) {\n                return;\n            }\n            if (id < 0 || id > Consts.SOUND_MAX) {\n                throw new Error(\"サウンド番号が範囲外です。\");\n            }\n            if (id >= wwa_data.SystemSound.BGM_LB && this._wwaData.bgm === id) {\n                return;\n            }\n            if ((id === wwa_data.SystemSound.NO_SOUND || id >= wwa_data.SystemSound.BGM_LB) && this._wwaData.bgm !== 0) {\n                if (!this._audioJSInstances[this._wwaData.bgm].wrapper.classList.contains(\"loading\")) {\n                    this._audioJSInstances[this._wwaData.bgm].pause();\n                }\n                this._wwaData.bgm = 0;\n            }\n            if (id === 0 || id === wwa_data.SystemSound.NO_SOUND) {\n                return;\n            }\n            if (this._audioJSInstances[id].wrapper.classList.contains(\"loading\")) {\n                if (id >= wwa_data.SystemSound.BGM_LB) {\n                    var loadi = (function (id, self) {\n                        var timer = setInterval(function () {\n                            if (self._wwaData.bgm === id) {\n                                if (!self._audioJSInstances[id].wrapper.classList.contains(\"loading\")) {\n                                    _this._audioJSInstances[id].skipTo(0);\n                                    _this._audioJSInstances[id].play();\n                                    _this._wwaData.bgm = id;\n                                    clearInterval(timer);\n                                }\n                            }\n                            else {\n                                clearInterval(timer);\n                                if (self._wwaData.bgm !== wwa_data.SystemSound.NO_SOUND) {\n                                    loadi(self._wwaData.bgm, self);\n                                }\n                            }\n                        }, 4);\n                    });\n                    loadi(id, this);\n                }\n                this._wwaData.bgm = id;\n                return;\n            }\n            if (id !== 0 && !this._audioJSInstances[id].wrapper.classList.contains(\"error\")) {\n                if (id >= wwa_data.SystemSound.BGM_LB) {\n                    this._audioJSInstances[id].skipTo(0);\n                    this._audioJSInstances[id].play();\n                    this._wwaData.bgm = id;\n                }\n                else if (this._nextSoundIsSub) {\n                    this._audioJSInstancesSub[id].skipTo(0);\n                    this._audioJSInstancesSub[id].play();\n                    this._nextSoundIsSub = false;\n                }\n                else {\n                    this._audioJSInstances[id].skipTo(0);\n                    this._audioJSInstances[id].play();\n                    this._nextSoundIsSub = true;\n                }\n            }\n        };\n        WWA.prototype.openGameWindow = function () {\n            var self = this;\n            var ppos = this._player.getPosition();\n            util.$id(\"wwa-cover\").style.opacity = \"0\";\n            if (this.getObjectIdByPosition(ppos) !== 0) {\n                this._player.setPartsAppearedFlag();\n            }\n            setTimeout(function () {\n                util.$id(\"wwa-wrapper\").removeChild(util.$id(\"wwa-cover\"));\n                self._main();\n            }, Consts.SPLASH_SCREEN_DISP_MILLS);\n        };\n        WWA.prototype.mainCaller = function (self) {\n            self._main();\n        };\n        WWA.prototype.soundCheckCaller = function (self) {\n            self.checkAllSoundLoaded();\n        };\n        WWA.prototype.onselectitem = function (itemPos) {\n            if (this._player.canUseItem(itemPos)) {\n                var bg = (wwa_util.$id(\"item\" + (itemPos - 1)));\n                bg.classList.add(\"onpress\");\n                this.playSound(wwa_data.SystemSound.DECISION);\n                if (this._wwaData.message[wwa_data.SystemMessage1.USE_ITEM] === \"BLANK\") {\n                    this._player.readyToUseItem(itemPos);\n                    var itemID = this._player.useItem();\n                    var mesID = this.getObjectAttributeById(itemID, Consts.ATR_STRING);\n                    this.setMessageQueue(this.getMessageById(mesID), false, false, itemID, wwa_data.PartsType.OBJECT, this._player.getPosition().getPartsCoord());\n                }\n                else {\n                    this.setMessageQueue(this._wwaData.message[wwa_data.SystemMessage1.USE_ITEM] === \"\" ?\n                        \"このアイテムを使います。\\nよろしいですか?\" :\n                        this._wwaData.message[wwa_data.SystemMessage1.USE_ITEM], true, true);\n                    this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_ITEM_USE;\n                    this._yesNoUseItemPos = itemPos;\n                }\n            }\n        };\n        WWA.prototype.onselectbutton = function (button, forcePassword) {\n            if (forcePassword === void 0) { forcePassword = false; }\n            var bg = (wwa_util.$id(wwa_data.sidebarButtonCellElementID[button]));\n            this.playSound(wwa_data.SystemSound.DECISION);\n            bg.classList.add(\"onpress\");\n            if (button === wwa_data.SidebarButton.QUICK_LOAD) {\n                if (this._quickSaveData !== void 0 && !forcePassword) {\n                    this.setMessageQueue(\"データを読み込みますか？\\n→Ｎｏでデータ復帰用パスワードの\\n　入力選択ができます。\", true, true);\n                    this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_QUICK_LOAD;\n                }\n                else {\n                    this.onpasswordloadcalled();\n                }\n            }\n            else if (button === wwa_data.SidebarButton.QUICK_SAVE) {\n                if (!this._wwaData.disableSaveFlag) {\n                    this.setMessageQueue(\"データの一時保存をします。\\nよろしいですか？\\n→Ｎｏでデータ復帰用パスワードの\\n　表示選択ができます。\", true, true);\n                    this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_QUICK_SAVE;\n                }\n                else {\n                    this.setMessageQueue(\"ここではセーブ機能は\\n使用できません。\", false, true);\n                }\n            }\n            else if (button === wwa_data.SidebarButton.RESTART_GAME) {\n                this.setMessageQueue(\"初めからスタートしなおしますか？\", true, true);\n                this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_RESTART_GAME;\n            }\n            else if (button === wwa_data.SidebarButton.GOTO_WWA) {\n                this.setMessageQueue(\"ＷＷＡの公式サイトを開きますか？\", true, true);\n                this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_GOTO_WWA;\n            }\n        };\n        WWA.prototype.onpasswordloadcalled = function () {\n            var bg = (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_LOAD]));\n            bg.classList.add(\"onpress\");\n            this.setMessageQueue(\"データ復帰用のパスワードを入力しますか？\", true, true);\n            this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_PASSWORD_LOAD;\n        };\n        WWA.prototype.onpasswordsavecalled = function () {\n            var bg = (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_SAVE]));\n            bg.classList.add(\"onpress\");\n            if (!this._wwaData.disableSaveFlag) {\n                this.setMessageQueue(\"データ復帰用のパスワードを表示しますか？\", true, true);\n                this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_PASSWORD_SAVE;\n            }\n            else {\n                this.setMessageQueue(\"ここではセーブ機能は\\n使用できません。\", false, true);\n            }\n        };\n        WWA.prototype.onchangespeed = function (type) {\n            var speedIndex;\n            if (type === wwa_data.SpeedChange.UP) {\n                speedIndex = this._player.speedUp();\n            }\n            else {\n                speedIndex = this._player.speedDown();\n            }\n            this.setMessageQueue(\"移動速度を【\" + wwa_data.speedNameList[speedIndex] + \"】に切り替えました。\\n\" +\n                (speedIndex === Consts.MAX_SPEED_INDEX ? \"戦闘も速くなります。\\n\" : \"\") +\n                \"(\" + (Consts.MAX_SPEED_INDEX + 1) + \"段階中\" + (speedIndex + 1) + \"） 速度を落とすにはIキー, 速度を上げるにはPキーを押してください。\", false, true);\n        };\n        WWA.prototype._main = function () {\n            var _this = this;\n            this._temporaryInputDisable = false;\n            this._waitTimeInCurrentFrame = Consts.DEFAULT_FRAME_INTERVAL;\n            this._stopUpdateByLoadFlag = false;\n            this._keyStore.update();\n            this._mouseStore.update();\n            if (this._yesNoJudgeInNextFrame !== void 0) {\n                this._yesNoJudge = this._yesNoJudgeInNextFrame;\n                this._yesNoJudgeInNextFrame = void 0;\n            }\n            if (this._clearFacesInNextFrame) {\n                this.clearFaces();\n                this._clearFacesInNextFrame = false;\n            }\n            for (var i = 0; i < this._execMacroListInNextFrame.length; i++) {\n                this._execMacroListInNextFrame[i].execute();\n            }\n            if (this._lastMessage.message === \"\" && this._lastMessage.isEndOfPartsEvent && this._reservedMoveMacroTurn !== void 0) {\n                this._player.setMoveMacroWaiting(this._reservedMoveMacroTurn);\n                this._reservedMoveMacroTurn = void 0;\n            }\n            this._execMacroListInNextFrame = [];\n            var prevPosition = this._player.getPosition();\n            var pdir = this._player.getDir();\n            if (this._player.isControllable()) {\n                if (this._keyStore.getKeyStateForControllPlayer(KeyCode.KEY_LEFT) === wwa_input.KeyState.KEYDOWN ||\n                    this._mouseStore.getMouseStateForControllPlayer(wwa_data.Direction.LEFT) === wwa_input.MouseState.MOUSEDOWN) {\n                    this._player.controll(wwa_data.Direction.LEFT);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.getKeyStateForControllPlayer(KeyCode.KEY_UP) === wwa_input.KeyState.KEYDOWN ||\n                    this._mouseStore.getMouseStateForControllPlayer(wwa_data.Direction.UP) === wwa_input.MouseState.MOUSEDOWN) {\n                    this._player.controll(wwa_data.Direction.UP);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.getKeyStateForControllPlayer(KeyCode.KEY_RIGHT) === wwa_input.KeyState.KEYDOWN ||\n                    this._mouseStore.getMouseStateForControllPlayer(wwa_data.Direction.RIGHT) === wwa_input.MouseState.MOUSEDOWN) {\n                    this._player.controll(wwa_data.Direction.RIGHT);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.getKeyStateForControllPlayer(KeyCode.KEY_DOWN) === wwa_input.KeyState.KEYDOWN ||\n                    this._mouseStore.getMouseStateForControllPlayer(wwa_data.Direction.DOWN) === wwa_input.MouseState.MOUSEDOWN) {\n                    this._player.controll(wwa_data.Direction.DOWN);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(wwa_data.dirToKey[pdir])) {\n                    this._player.controll(pdir);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_LEFT) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.LEFT)) {\n                    this._player.controll(wwa_data.Direction.LEFT);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_UP) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.UP)) {\n                    this._player.controll(wwa_data.Direction.UP);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_RIGHT) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.RIGHT)) {\n                    this._player.controll(wwa_data.Direction.RIGHT);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_DOWN) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.DOWN)) {\n                    this._player.controll(wwa_data.Direction.DOWN);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_LEFT) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.LEFT)) {\n                    this._player.controll(wwa_data.Direction.LEFT);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_UP) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.UP)) {\n                    this._player.controll(wwa_data.Direction.UP);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_RIGHT) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.RIGHT)) {\n                    this._player.controll(wwa_data.Direction.RIGHT);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_DOWN) ||\n                    this._mouseStore.checkClickMouse(wwa_data.Direction.DOWN)) {\n                    this._player.controll(wwa_data.Direction.DOWN);\n                    this._objectMovingDataManager.update();\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_1) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(1);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_2) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(2);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_3) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(3);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_Q) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(4);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_W) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(5);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_E) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(6);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_A) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(7);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_S) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(8);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_D) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(9);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_Z) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(10);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_X) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(11);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_C) === wwa_input.KeyState.KEYDOWN) {\n                    this.onselectitem(12);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_I)) {\n                    this.onchangespeed(wwa_data.SpeedChange.DOWN);\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_P) ||\n                    this._keyStore.checkHitKey(KeyCode.KEY_F2)) {\n                    this.onchangespeed(wwa_data.SpeedChange.UP);\n                }\n                else if (this._keyStore.getKeyState(KeyCode.KEY_F1) === wwa_input.KeyState.KEYDOWN ||\n                    this._keyStore.getKeyState(KeyCode.KEY_M) === wwa_input.KeyState.KEYDOWN) {\n                    if (this.launchBattleEstimateWindow()) {\n                    }\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F3)) {\n                    this.playSound(wwa_data.SystemSound.DECISION);\n                    this.onselectbutton(wwa_data.SidebarButton.QUICK_LOAD, true);\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F4)) {\n                    this.playSound(wwa_data.SystemSound.DECISION);\n                    this.onpasswordsavecalled();\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F5)) {\n                    this.onselectbutton(wwa_data.SidebarButton.QUICK_LOAD);\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F6)) {\n                    this.onselectbutton(wwa_data.SidebarButton.QUICK_SAVE);\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F7)) {\n                    this.onselectbutton(wwa_data.SidebarButton.RESTART_GAME);\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F8)) {\n                    this.onselectbutton(wwa_data.SidebarButton.GOTO_WWA);\n                }\n                else if (this._keyStore.checkHitKey(KeyCode.KEY_F12)) {\n                    this._displayHelp();\n                }\n                this._keyStore.memorizeKeyStateOnControllableFrame();\n                this._mouseStore.memorizeMouseStateOnControllableFrame();\n            }\n            else if (this._player.isJumped()) {\n                if (!this._camera.isResetting()) {\n                    this._player.processAfterJump();\n                }\n            }\n            else if (this._player.isMoving()) {\n                this._player.move();\n                this._objectMovingDataManager.update();\n            }\n            else if (this._player.isWaitingMessage()) {\n                if (!this._messageWindow.isVisible()) {\n                    this._messageWindow.show();\n                }\n                if (!this._messageWindow.isYesNoChoice()) {\n                    var enter = this._keyStore.getKeyStateForMessageCheck(KeyCode.KEY_ENTER);\n                    var space = this._keyStore.getKeyStateForMessageCheck(KeyCode.KEY_SPACE);\n                    var esc = this._keyStore.getKeyStateForMessageCheck(KeyCode.KEY_ESC);\n                    if (enter === KeyState.KEYDOWN || enter === KeyState.KEYPRESS_MESSAGECHANGE ||\n                        space === KeyState.KEYDOWN || space === KeyState.KEYPRESS_MESSAGECHANGE ||\n                        esc === KeyState.KEYDOWN || esc === KeyState.KEYPRESS_MESSAGECHANGE ||\n                        this._mouseStore.getMouseState() === MouseState.MOUSEDOWN) {\n                        for (var i = 0; i < wwa_data.sidebarButtonCellElementID.length; i++) {\n                            var elm = (wwa_util.$id(wwa_data.sidebarButtonCellElementID[i]));\n                            if (elm.classList.contains(\"onpress\")) {\n                                elm.classList.remove(\"onpress\");\n                            }\n                        }\n                        this._setNextMessage();\n                    }\n                }\n                else {\n                    if (!this._messageWindow.isInputDisable()) {\n                        if (this._yesNoJudge === wwa_data.YesNoState.UNSELECTED) {\n                            if (this._keyStore.getKeyState(KeyCode.KEY_ENTER) === KeyState.KEYDOWN ||\n                                this._keyStore.getKeyState(KeyCode.KEY_Y) === KeyState.KEYDOWN) {\n                                this._yesNoJudge = wwa_data.YesNoState.YES;\n                            }\n                            else if (this._keyStore.getKeyState(KeyCode.KEY_N) === KeyState.KEYDOWN ||\n                                this._keyStore.getKeyState(KeyCode.KEY_ESC) === KeyState.KEYDOWN) {\n                                this._yesNoJudge = wwa_data.YesNoState.NO;\n                            }\n                        }\n                        if (this._yesNoJudge === wwa_data.YesNoState.YES) {\n                            this.playSound(wwa_data.SystemSound.DECISION);\n                            this._yesNoDispCounter = Consts.YESNO_PRESS_DISP_FRAME_NUM;\n                            this._messageWindow.setInputDisable();\n                            this._messageWindow.update();\n                        }\n                        else if (this._yesNoJudge === wwa_data.YesNoState.NO) {\n                            this.playSound(wwa_data.SystemSound.DECISION);\n                            this._yesNoDispCounter = Consts.YESNO_PRESS_DISP_FRAME_NUM;\n                            this._messageWindow.setInputDisable();\n                            this._messageWindow.update();\n                        }\n                    }\n                }\n            }\n            else if (this._player.isWatingEstimateWindow()) {\n                if (this._keyStore.getKeyState(KeyCode.KEY_ENTER) === KeyState.KEYDOWN ||\n                    this._keyStore.getKeyState(KeyCode.KEY_SPACE) === KeyState.KEYDOWN) {\n                    this.hideBattleEstimateWindow();\n                }\n            }\n            else if (this._player.isFighting()) {\n                this._player.fight();\n                this._monsterWindow.update(this._monster);\n            }\n            else if (this._player.isWaitingMoveMacro()) {\n                if (this._player.isMoveObjectAutoExecTime()) {\n                    this.moveObjects(false);\n                    this._player.resetMoveObjectAutoExecTimer();\n                }\n                this._objectMovingDataManager.update();\n            }\n            this._prevFrameEventExected = false;\n            if (this._player.getPosition().isJustPosition() && this._camera.getPosition().isScreenTopPosition()) {\n                if (!this._player.isJumped() &&\n                    !this._player.isWaitingMessage() &&\n                    !this._player.isWaitingMoveMacro() &&\n                    !this._player.isFighting()) {\n                    if (this._player.isPartsAppearedTime()) {\n                        this._player.clearPartsAppearedFlag();\n                    }\n                    this._replaceRandomObjectsInScreen();\n                    var eventExecuted = this.checkMap();\n                    if (!eventExecuted) {\n                        this.checkObject();\n                    }\n                    this._prevFrameEventExected = eventExecuted;\n                }\n                if (this._player.isWaitingMessage() &&\n                    this._messageWindow.isYesNoChoice() &&\n                    this._yesNoJudge !== wwa_data.YesNoState.UNSELECTED &&\n                    !this._player.isWaitingMoveMacro() &&\n                    !this._player.isFighting()) {\n                    this._execChoiceWindowRunningEvent();\n                }\n            }\n            if (this._passwordLoadExecInNextFrame) {\n                this._stopUpdateByLoadFlag = true;\n                this._loadType = wwa_data.LoadType.PASSWORD;\n                this._player.clearPasswordWindowWaiting();\n                this._passwordLoadExecInNextFrame = false;\n            }\n            this._drawAll();\n            this._mainCallCounter++;\n            this._mainCallCounter %= 1000000000;\n            if (!this._player.isWaitingMessage() || !this._isClassicModeEnable) {\n                this._animationCounter = (this._animationCounter + 1) % (Consts.ANIMATION_REP_HALF_FRAME * 2);\n            }\n            if (this._camera.isResetting()) {\n                this._camera.advanceTransitionStepNum();\n            }\n            if (!this._player.isWaitingMessage()) {\n                this._player.decrementLookingAroundTimer();\n                if (this._statusPressCounter.energy > 0 && --this._statusPressCounter.energy === 0) {\n                    wwa_util.$id(\"disp-energy\").classList.remove(\"onpress\");\n                }\n                if (this._statusPressCounter.strength > 0 && --this._statusPressCounter.strength === 0) {\n                    wwa_util.$id(\"disp-strength\").classList.remove(\"onpress\");\n                }\n                if (this._statusPressCounter.defence > 0 && --this._statusPressCounter.defence === 0) {\n                    wwa_util.$id(\"disp-defence\").classList.remove(\"onpress\");\n                }\n                if (this._statusPressCounter.gold > 0 && --this._statusPressCounter.gold === 0) {\n                    wwa_util.$id(\"disp-gold\").classList.remove(\"onpress\");\n                }\n            }\n            if (this._player.isWaitingMoveMacro()) {\n                this._player.decrementMoveObjectAutoExecTimer();\n            }\n            if (!this._stopUpdateByLoadFlag) {\n                setTimeout(this.mainCaller, this._waitTimeInCurrentFrame, this);\n            }\n            else {\n                this._fadeout(function () {\n                    if (_this._loadType === wwa_data.LoadType.QUICK_LOAD) {\n                        _this._quickLoad();\n                    }\n                    else if (_this._loadType === wwa_data.LoadType.RESTART_GAME) {\n                        _this._restartGame();\n                    }\n                    else if (_this._loadType === wwa_data.LoadType.PASSWORD) {\n                        _this._applyQuickLoad(_this._passwordSaveExtractData);\n                        _this._passwordSaveExtractData = void 0;\n                    }\n                    setTimeout(_this.mainCaller, _this._waitTimeInCurrentFrame, _this);\n                });\n            }\n        };\n        WWA.prototype._drawAll = function () {\n            var cpParts = this._camera.getPosition().getPartsCoord();\n            var cpOffset = this._camera.getPosition().getOffsetCoord();\n            var yLimit = Consts.MAP_WINDOW_HEIGHT;\n            var targetX;\n            var targetY;\n            var ppos = this._player.getPosition().getPartsCoord();\n            if (this._paintSkipByDoorOpen) {\n                this._paintSkipByDoorOpen = false;\n                return;\n            }\n            this._cgManager.clearCanvas(0, 0, Consts.MAP_WINDOW_WIDTH, Consts.MAP_WINDOW_HEIGHT);\n            this._cgManager.drawBase(0, 0, Consts.MAP_WINDOW_WIDTH, Consts.MAP_WINDOW_HEIGHT);\n            if (this._camera.isResetting()) {\n                if (this._camera.getPreviousPosition() !== null) {\n                    var cpPartsPrev = this._camera.getPreviousPosition().getPartsCoord();\n                    var cpOffsetPrev = this._camera.getPreviousPosition().getOffsetCoord();\n                }\n                yLimit = this._camera.getTransitionStepNum() * Consts.CHIP_SIZE;\n                this._drawMap(cpPartsPrev, cpOffsetPrev, yLimit, true);\n                this._drawPlayer(cpPartsPrev, cpOffsetPrev, yLimit, true);\n                this._drawObjects(cpPartsPrev, cpOffsetPrev, yLimit, true);\n                if (this._camera.isFinalStep()) {\n                    var opacity = 255;\n                    var timer = setInterval(function () {\n                        var elm = wwa_util.$id(\"wwa-fader\");\n                        opacity -= Consts.FADEOUT_SPEED * 3;\n                        if (opacity <= 0) {\n                            clearInterval(timer);\n                            elm.style.backgroundColor = \"transparent\";\n                            elm.removeAttribute(\"style\");\n                            elm.style.display = \"none\";\n                            return;\n                        }\n                        elm.style.opacity = (opacity / 255) + \"\";\n                    }, 20);\n                }\n            }\n            this._drawMap(cpParts, cpOffset, yLimit);\n            this._drawPlayer(cpParts, cpOffset, yLimit);\n            this._drawObjects(cpParts, cpOffset, yLimit);\n            if (this._player.isFighting() && !this._player.isBattleStartFrame()) {\n                targetX = this._player.isTurn() ? this._monster.position.x : ppos.x;\n                targetY = this._player.isTurn() ? this._monster.position.y : ppos.y;\n                this._cgManager.drawCanvas(this._battleEffectCoord.x, this._battleEffectCoord.y, Consts.CHIP_SIZE * (targetX - cpParts.x) - cpOffset.x, Consts.CHIP_SIZE * (targetY - cpParts.y) - cpOffset.y, false);\n            }\n            this._drawEffect();\n            this._drawFaces();\n            this._drawFrame();\n        };\n        WWA.prototype._drawMap = function (cpParts, cpOffset, yLimit, isPrevCamera) {\n            if (isPrevCamera === void 0) { isPrevCamera = false; }\n            if (cpParts === void 0) {\n                return;\n            }\n            var xLeft = Math.max(0, cpParts.x - 1);\n            var xRight = Math.min(this._wwaData.mapWidth - 1, cpParts.x + Consts.H_PARTS_NUM_IN_WINDOW);\n            var yTop = Math.max(0, cpParts.y - 1);\n            var yBottom = Math.min(this._wwaData.mapWidth - 1, cpParts.y + Consts.V_PARTS_NUM_IN_WINDOW);\n            for (var x = xLeft; x <= xRight; x++) {\n                for (var y = yTop; y <= yBottom; y++) {\n                    var partsID = this._wwaData.map[y][x];\n                    var ppx = this._wwaData.mapAttribute[partsID][Consts.ATR_X] / Consts.CHIP_SIZE;\n                    var ppy = this._wwaData.mapAttribute[partsID][Consts.ATR_Y] / Consts.CHIP_SIZE;\n                    var canvasX = Consts.CHIP_SIZE * (x - cpParts.x) - cpOffset.x;\n                    var canvasY = Consts.CHIP_SIZE * (y - cpParts.y) - cpOffset.y;\n                    if (isPrevCamera) {\n                        this._cgManager.drawCanvasWithLowerYLimit(ppx, ppy, canvasX, canvasY, yLimit);\n                    }\n                    else {\n                        this._cgManager.drawCanvasWithUpperYLimit(ppx, ppy, canvasX, canvasY, yLimit);\n                    }\n                }\n            }\n        };\n        WWA.prototype._drawPlayer = function (cpParts, cpOffset, yLimit, isPrevCamera) {\n            if (isPrevCamera === void 0) { isPrevCamera = false; }\n            if (cpParts === void 0 || this._wwaData.delPlayerFlag) {\n                return;\n            }\n            var pos = this._player.getPosition().getPartsCoord();\n            var poso = this._player.getPosition().getOffsetCoord();\n            var relpcrop = wwa_data.dirToPos[this._player.getDir()];\n            var canvasX = (pos.x - cpParts.x) * Consts.CHIP_SIZE + poso.x - cpOffset.x;\n            var canvasY = (pos.y - cpParts.y) * Consts.CHIP_SIZE + poso.y - cpOffset.y;\n            var dx = Math.abs(poso.x);\n            var dy = Math.abs(poso.y);\n            var dir = this._player.getDir();\n            var crop;\n            var dirChanger = [2, 3, 4, 5, 0, 1, 6, 7];\n            if (this._player.isLookingAround() && !this._player.isWaitingMessage()) {\n                crop = this._wwaData.playerImgPosX + dirChanger[Math.floor(this._mainCallCounter % 64 / 8)];\n            }\n            else if (this._player.isMovingImage()) {\n                crop = this._wwaData.playerImgPosX + relpcrop + 1;\n            }\n            else {\n                crop = this._wwaData.playerImgPosX + relpcrop;\n            }\n            if (isPrevCamera) {\n                this._cgManager.drawCanvasWithLowerYLimit(crop, this._wwaData.playerImgPosY, canvasX, canvasY, yLimit);\n            }\n            else {\n                this._cgManager.drawCanvasWithUpperYLimit(crop, this._wwaData.playerImgPosY, canvasX, canvasY, yLimit);\n            }\n        };\n        WWA.prototype._drawObjects = function (cpParts, cpOffset, yLimit, isPrevCamera) {\n            if (isPrevCamera === void 0) { isPrevCamera = false; }\n            if (cpParts === void 0) {\n                return;\n            }\n            var xLeft = Math.max(0, cpParts.x - 1);\n            var xRight = Math.min(this._wwaData.mapWidth - 1, cpParts.x + Consts.H_PARTS_NUM_IN_WINDOW);\n            var yTop = Math.max(0, cpParts.y - 1);\n            var yBottom = Math.min(this._wwaData.mapWidth - 1, cpParts.y + Consts.V_PARTS_NUM_IN_WINDOW);\n            var offset;\n            for (var x = xLeft; x <= xRight; x++) {\n                for (var y = yTop; y <= yBottom; y++) {\n                    if (this._player.isFighting() &&\n                        this._player.isTurn() &&\n                        this._player.getPosition().getPartsCoord().equals(this._monster.position) &&\n                        new wwa_data.Coord(x, y).equals(this._monster.position)) {\n                        continue;\n                    }\n                    var partsIDObj = this._wwaData.mapObject[y][x];\n                    offset = new Coord(0, 0);\n                    if (this._wwaData.objectAttribute[partsIDObj][Consts.ATR_MOVE] !== wwa_data.MoveType.STATIC) {\n                        var result = this._objectMovingDataManager.getOffsetByBeforePartsCoord(new Coord(x, y));\n                        if (result !== null) {\n                            offset = result;\n                        }\n                    }\n                    var imgType = (this._animationCounter > Consts.ANIMATION_REP_HALF_FRAME ||\n                        this._wwaData.objectAttribute[partsIDObj][Consts.ATR_X2] === 0 &&\n                            this._wwaData.objectAttribute[partsIDObj][Consts.ATR_Y2] === 0);\n                    var ppxo = this._wwaData.objectAttribute[partsIDObj][imgType ? Consts.ATR_X : Consts.ATR_X2] / Consts.CHIP_SIZE;\n                    var ppyo = this._wwaData.objectAttribute[partsIDObj][imgType ? Consts.ATR_Y : Consts.ATR_Y2] / Consts.CHIP_SIZE;\n                    var canvasX = Consts.CHIP_SIZE * (x - cpParts.x) + offset.x - cpOffset.x;\n                    var canvasY = Consts.CHIP_SIZE * (y - cpParts.y) + offset.y - cpOffset.y;\n                    var type = this._wwaData.objectAttribute[partsIDObj][Consts.ATR_TYPE];\n                    var num = this._wwaData.objectAttribute[partsIDObj][Consts.ATR_NUMBER];\n                    if (partsIDObj !== 0 && !this._checkNoDrawObject(new Coord(x, y), type, num)) {\n                        if (isPrevCamera) {\n                            this._cgManager.drawCanvasWithLowerYLimit(ppxo, ppyo, canvasX, canvasY, yLimit);\n                        }\n                        else {\n                            this._cgManager.drawCanvasWithUpperYLimit(ppxo, ppyo, canvasX, canvasY, yLimit);\n                        }\n                    }\n                }\n            }\n        };\n        WWA.prototype._drawEffect = function () {\n            if (this._wwaData.effectCoords.length === 0) {\n                return;\n            }\n            var i = Math.floor(this._mainCallCounter % (this._wwaData.effectCoords.length * this._wwaData.effectWaits) / this._wwaData.effectWaits);\n            for (var y = 0; y < Consts.V_PARTS_NUM_IN_WINDOW; y++) {\n                for (var x = 0; x < Consts.H_PARTS_NUM_IN_WINDOW; x++) {\n                    this._cgManager.drawCanvas(this._wwaData.effectCoords[i].x, this._wwaData.effectCoords[i].y, x * Consts.CHIP_SIZE, y * Consts.CHIP_SIZE, false);\n                }\n            }\n        };\n        WWA.prototype._drawFaces = function () {\n            for (var i = 0; i < this._faces.length; i++) {\n                this._cgManager.drawCanvasWithSize(this._faces[i].srcPos.x, this._faces[i].srcPos.y, this._faces[i].srcSize.x, this._faces[i].srcSize.y, this._faces[i].destPos.x, this._faces[i].destPos.y, false);\n            }\n        };\n        WWA.prototype._drawFrame = function () {\n            this._cgManager.drawCanvas(this._frameCoord.x, this._frameCoord.y, 0, 0, false);\n            this._cgManager.drawCanvas(this._frameCoord.x + 2, this._frameCoord.y, Consts.MAP_WINDOW_WIDTH - Consts.CHIP_SIZE, 0, false);\n            this._cgManager.drawCanvas(this._frameCoord.x, this._frameCoord.y + 2, 0, Consts.MAP_WINDOW_HEIGHT - Consts.CHIP_SIZE, false);\n            this._cgManager.drawCanvas(this._frameCoord.x + 2, this._frameCoord.y + 2, Consts.MAP_WINDOW_WIDTH - Consts.CHIP_SIZE, Consts.MAP_WINDOW_HEIGHT - Consts.CHIP_SIZE, false);\n            for (var i = 1; i < Consts.H_PARTS_NUM_IN_WINDOW - 1; i++) {\n                this._cgManager.drawCanvas(this._frameCoord.x + 1, this._frameCoord.y, Consts.CHIP_SIZE * i, 0, false);\n                this._cgManager.drawCanvas(this._frameCoord.x + 1, this._frameCoord.y + 2, Consts.CHIP_SIZE * i, Consts.MAP_WINDOW_HEIGHT - Consts.CHIP_SIZE, false);\n            }\n            for (var i = 1; i < Consts.V_PARTS_NUM_IN_WINDOW - 1; i++) {\n                this._cgManager.drawCanvas(this._frameCoord.x, this._frameCoord.y + 1, 0, Consts.CHIP_SIZE * i, false);\n                this._cgManager.drawCanvas(this._frameCoord.x + 2, this._frameCoord.y + 1, Consts.MAP_WINDOW_WIDTH - Consts.CHIP_SIZE, Consts.CHIP_SIZE * i, false);\n            }\n        };\n        WWA.prototype._checkNoDrawObject = function (objCoord, objType, atrNumber) {\n            var pPos = this._player.getPosition();\n            var pCoord = pPos.getPartsCoord();\n            if (!pPos.isJustPosition() || pCoord.x !== objCoord.x || pCoord.y !== objCoord.y || this._wwaData.objectNoCollapseDefaultFlag) {\n                return false;\n            }\n            if (objType === Consts.OBJECT_DOOR && atrNumber === 0) {\n                return true;\n            }\n            return (objType === Consts.OBJECT_STATUS || objType === Consts.OBJECT_MESSAGE ||\n                objType === Consts.OBJECT_ITEM || objType === Consts.OBJECT_SELL ||\n                objType === Consts.OBJECT_BUY || objType === Consts.OBJECT_SELL ||\n                objType === Consts.OBJECT_LOCALGATE);\n        };\n        WWA.prototype.getMapWidth = function () {\n            if (this._wwaData === void 0) {\n                throw new Error(\"マップデータがロードされていません\");\n            }\n            return this._wwaData.mapWidth;\n        };\n        WWA.prototype.getMapIdByPosition = function (pos) {\n            var pc = pos.getPartsCoord();\n            return this._wwaData.map[pc.y][pc.x];\n        };\n        WWA.prototype.getObjectIdByPosition = function (pos) {\n            var pc = pos.getPartsCoord();\n            return this._wwaData.mapObject[pc.y][pc.x];\n        };\n        WWA.prototype.getMapTypeByPosition = function (pos) {\n            var pc = pos.getPartsCoord();\n            var pid = this._wwaData.map[pc.y][pc.x];\n            return this._wwaData.mapAttribute[pid][Consts.ATR_TYPE];\n        };\n        WWA.prototype.getObjectTypeByPosition = function (pos) {\n            var pc = pos.getPartsCoord();\n            var pid = this._wwaData.mapObject[pc.y][pc.x];\n            return this._wwaData.objectAttribute[pid][Consts.ATR_TYPE];\n        };\n        WWA.prototype.getMapAttributeByPosition = function (pos, attr) {\n            var pc = pos.getPartsCoord();\n            var pid = this._wwaData.map[pc.y][pc.x];\n            return this._wwaData.mapAttribute[pid][attr];\n        };\n        WWA.prototype.isCurrentPosMapPartsIncludingMessage = function (pos) {\n            var mesid = this.getMapAttributeByPosition(pos, Consts.ATR_STRING);\n            return mesid !== 0;\n        };\n        WWA.prototype.getObjectAttributeByPosition = function (pos, attr) {\n            var pc = pos.getPartsCoord();\n            var pid = this._wwaData.mapObject[pc.y][pc.x];\n            return this._wwaData.objectAttribute[pid][attr];\n        };\n        WWA.prototype.getMapAttributeById = function (id, attr) {\n            return this._wwaData.mapAttribute[id][attr];\n        };\n        WWA.prototype.getObjectAttributeById = function (id, attr) {\n            return this._wwaData.objectAttribute[id][attr];\n        };\n        WWA.prototype.getObjectCropXById = function (id) {\n            return this._wwaData.objectAttribute[id][Consts.ATR_X];\n        };\n        WWA.prototype.getObjectCropYById = function (id) {\n            return this._wwaData.objectAttribute[id][Consts.ATR_Y];\n        };\n        WWA.prototype.getMessageById = function (messageID) {\n            return this._wwaData.message[messageID];\n        };\n        WWA.prototype.getSystemMessageById = function (messageID) {\n            return this._wwaData.systemMessage[messageID];\n        };\n        WWA.prototype.checkMap = function (pos) {\n            var playerPos = this._player.getPosition().getPartsCoord();\n            pos = (pos !== void 0 && pos !== null) ? pos : playerPos;\n            var partsID = this._wwaData.map[pos.y][pos.x];\n            var mapAttr = this._wwaData.mapAttribute[partsID][Consts.ATR_TYPE];\n            var isPlayerPositionExec = (pos.x === playerPos.x && pos.y === playerPos.y);\n            var eventExecuted = false;\n            if (isPlayerPositionExec) {\n                if (this._player.getLastExecPartsIDOnSamePosition(wwa_data.PartsType.MAP) === partsID) {\n                    return false;\n                }\n            }\n            if (mapAttr === Consts.MAP_STREET) {\n                eventExecuted = this._execMapStreetEvent(pos, partsID, mapAttr);\n            }\n            else if (mapAttr === Consts.MAP_WALL) {\n                eventExecuted = this._execMapWallEvent(pos, partsID, mapAttr);\n            }\n            else if (mapAttr === Consts.MAP_LOCALGATE) {\n                eventExecuted = this._execMapLocalGateEvent(pos, partsID, mapAttr);\n            }\n            else if (mapAttr === Consts.MAP_URLGATE) {\n                eventExecuted = this._execMapUrlGateEvent(pos, partsID, mapAttr);\n            }\n            if (isPlayerPositionExec && !this._player.isJumped()) {\n                this._player.setLastExecInfoOnSamePosition(wwa_data.PartsType.MAP, partsID);\n            }\n            return eventExecuted;\n        };\n        WWA.prototype.checkObject = function (pos) {\n            var playerPos = this._player.getPosition().getPartsCoord();\n            pos = (pos !== void 0 && pos !== null) ? pos : playerPos;\n            var partsID = this._wwaData.mapObject[pos.y][pos.x];\n            var objAttr = this._wwaData.objectAttribute[partsID][Consts.ATR_TYPE];\n            var isPlayerPositionExec = (pos.x === playerPos.x && pos.y === playerPos.y);\n            if (isPlayerPositionExec) {\n                if (this._player.getLastExecPartsIDOnSamePosition(wwa_data.PartsType.OBJECT) === partsID) {\n                    return;\n                }\n            }\n            if (objAttr === Consts.OBJECT_NORMAL) {\n                this._execObjectNormalEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_MESSAGE) {\n                this._execObjectMessageEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_MONSTER) {\n                this._execObjectMonsterEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_ITEM) {\n                this._execObjectItemEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_DOOR) {\n                this._execObjectDoorEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_STATUS) {\n                this._execObjectStatusEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_BUY) {\n                this._execObjectBuyEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_SELL) {\n                this._execObjectSellEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_URLGATE) {\n                this._execObjectUrlGateEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_SCORE) {\n                this._execObjectScoreEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_SELECT) {\n                this._execObjectYesNoChoiceEvent(pos, partsID, objAttr);\n            }\n            else if (objAttr === Consts.OBJECT_LOCALGATE) {\n                this._execObjectLocalGateEvent(pos, partsID, objAttr);\n            }\n            if (isPlayerPositionExec && !this._player.isJumped()) {\n                this._player.setLastExecInfoOnSamePosition(wwa_data.PartsType.OBJECT, partsID);\n            }\n        };\n        WWA.prototype._execMapStreetEvent = function (pos, partsID, mapAttr) {\n            var itemID = this._wwaData.mapAttribute[partsID][Consts.ATR_ITEM];\n            if (itemID !== 0 && !this._player.hasItem(itemID)) {\n                return false;\n            }\n            this.appearParts(pos, wwa_data.AppearanceTriggerType.MAP);\n            var messageID = this._wwaData.mapAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            this._waitTimeInCurrentFrame += this._wwaData.mapAttribute[partsID][Consts.ATR_NUMBER] * 100;\n            this._temporaryInputDisable = true;\n            var messageDisplayed = this.setMessageQueue(message, false, false, partsID, wwa_data.PartsType.MAP, pos.clone());\n            this.playSound(this._wwaData.mapAttribute[partsID][Consts.ATR_SOUND]);\n            return messageID !== 0 && messageDisplayed;\n        };\n        WWA.prototype._execMapWallEvent = function (pos, partsID, mapAttr) {\n            var objID = this.getObjectIdByPosition(pos.convertIntoPosition(this));\n            var objType = this.getObjectAttributeById(objID, Consts.ATR_TYPE);\n            if (objID === 0 ||\n                objType === Consts.OBJECT_NORMAL ||\n                objType === Consts.OBJECT_DOOR && (!this._player.hasItem(this.getObjectAttributeById(objID, Consts.ATR_ITEM)) ||\n                    this.getObjectAttributeById(objType, Consts.ATR_MODE) === Consts.PASSABLE_OBJECT)) {\n                this.appearParts(pos, wwa_data.AppearanceTriggerType.MAP);\n                var messageID = this._wwaData.mapAttribute[partsID][Consts.ATR_STRING];\n                var message = this._wwaData.message[messageID];\n                this.setMessageQueue(message, false, false, partsID, wwa_data.PartsType.MAP, pos.clone());\n                this.playSound(this._wwaData.mapAttribute[partsID][Consts.ATR_SOUND]);\n                return false;\n            }\n            return false;\n        };\n        WWA.prototype._execMapLocalGateEvent = function (pos, partsID, mapAttr) {\n            var playerPos = this._player.getPosition().getPartsCoord();\n            var jx = this._wwaData.mapAttribute[partsID][Consts.ATR_JUMP_X];\n            var jy = this._wwaData.mapAttribute[partsID][Consts.ATR_JUMP_Y];\n            if (jx > Consts.RELATIVE_COORD_LOWER) {\n                jx = pos.x + jx - Consts.RELATIVE_COORD_BIAS;\n            }\n            if (jy > Consts.RELATIVE_COORD_LOWER) {\n                jy = pos.y + jy - Consts.RELATIVE_COORD_BIAS;\n            }\n            this.appearParts(pos, wwa_data.AppearanceTriggerType.MAP);\n            if (0 <= jx && 0 <= jy && jx < this._wwaData.mapWidth && jy < this._wwaData.mapWidth &&\n                (jx !== playerPos.x || jy !== playerPos.y)) {\n                this._player.jumpTo(new Position(this, jx, jy, 0, 0));\n                this.playSound(this._wwaData.mapAttribute[partsID][Consts.ATR_SOUND]);\n                return true;\n            }\n            return false;\n        };\n        WWA.prototype._execMapUrlGateEvent = function (pos, partsID, mapAttr) {\n            var messageID = this._wwaData.mapAttribute[partsID][Consts.ATR_STRING];\n            if (!this._isURLGateEnable) {\n                return true;\n            }\n            if (this._wwaData.message[wwa_data.SystemMessage1.ASK_LINK] === \"BLANK\") {\n                location.href = wwa_util.$escapedURI(this._wwaData.message[messageID].split(/\\s/g)[0]);\n                return;\n            }\n            this.setMessageQueue(this._wwaData.message[wwa_data.SystemMessage1.ASK_LINK] === \"\" ?\n                \"他のページにリンクします。\\nよろしいですか？\" :\n                this._wwaData.message[wwa_data.SystemMessage1.ASK_LINK], true, true);\n            this._yesNoChoicePartsCoord = pos;\n            this._yesNoChoicePartsID = partsID;\n            this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_MAP_PARTS;\n            this._yesNoURL = this._wwaData.message[messageID].split(/\\s/g)[0];\n            return true;\n        };\n        WWA.prototype._execObjectNormalEvent = function (pos, partsID, objAttr) {\n        };\n        WWA.prototype._execObjectMessageEvent = function (pos, partsID, objAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            var playerPos = this._player.getPosition().getPartsCoord();\n            var soundID = this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND];\n            if (pos.x === playerPos.x && pos.y === playerPos.y && !this._wwaData.objectNoCollapseDefaultFlag) {\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n            }\n            this.setMessageQueue(message, false, false, partsID, wwa_data.PartsType.OBJECT, pos);\n            this._waitTimeInCurrentFrame += this._wwaData.objectAttribute[partsID][Consts.ATR_NUMBER] * 100;\n            this._temporaryInputDisable = true;\n            this.appearParts(pos, wwa_data.AppearanceTriggerType.OBJECT, partsID);\n            this.playSound(soundID);\n        };\n        WWA.prototype._execObjectStatusEvent = function (pos, partsID, objAttr) {\n            var status = new wwa_data.Status(this._wwaData.objectAttribute[partsID][Consts.ATR_ENERGY], this._wwaData.objectAttribute[partsID][Consts.ATR_STRENGTH], this._wwaData.objectAttribute[partsID][Consts.ATR_DEFENCE], this._wwaData.objectAttribute[partsID][Consts.ATR_GOLD]);\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            var pstatus = this._player.getStatusWithoutEquipments();\n            if (status.strength > Consts.STATUS_MINUS_BORDER &&\n                pstatus.strength < status.strength - Consts.STATUS_MINUS_BORDER ||\n                status.defence > Consts.STATUS_MINUS_BORDER &&\n                    pstatus.defence < status.defence - Consts.STATUS_MINUS_BORDER ||\n                status.gold > Consts.STATUS_MINUS_BORDER &&\n                    pstatus.gold < status.gold - Consts.STATUS_MINUS_BORDER) {\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n                this._keyStore.allClear();\n                this._mouseStore.clear();\n                return;\n            }\n            status.energy = status.energy > Consts.STATUS_MINUS_BORDER ?\n                Consts.STATUS_MINUS_BORDER - status.energy : status.energy;\n            status.strength = status.strength > Consts.STATUS_MINUS_BORDER ?\n                Consts.STATUS_MINUS_BORDER - status.strength : status.strength;\n            status.defence = status.defence > Consts.STATUS_MINUS_BORDER ?\n                Consts.STATUS_MINUS_BORDER - status.defence : status.defence;\n            status.gold = status.gold > Consts.STATUS_MINUS_BORDER ?\n                Consts.STATUS_MINUS_BORDER - status.gold : status.gold;\n            this._player.addStatusAll(status);\n            this.setStatusChangedEffect(status);\n            if (this._player.isDead() && this._wwaData.objectAttribute[partsID][Consts.ATR_ENERGY] !== 0) {\n                this.gameover();\n                return;\n            }\n            this.setMessageQueue(message, false, false, partsID, wwa_data.PartsType.OBJECT, pos.clone());\n            this._wwaData.mapObject[pos.y][pos.x] = 0;\n            this.appearParts(pos, wwa_data.AppearanceTriggerType.OBJECT, partsID);\n            this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n        };\n        WWA.prototype._execObjectMonsterEvent = function (pos, partsID, objAttr) {\n            var _this = this;\n            var monsterImgCoord = new wwa_data.Coord(this._wwaData.objectAttribute[partsID][Consts.ATR_X], this._wwaData.objectAttribute[partsID][Consts.ATR_Y]);\n            var monsterStatus = new wwa_data.Status(this._wwaData.objectAttribute[partsID][Consts.ATR_ENERGY], this._wwaData.objectAttribute[partsID][Consts.ATR_STRENGTH], this._wwaData.objectAttribute[partsID][Consts.ATR_DEFENCE], this._wwaData.objectAttribute[partsID][Consts.ATR_GOLD]);\n            var monsterMessage = this._wwaData.message[this._wwaData.objectAttribute[partsID][Consts.ATR_STRING]];\n            var monsterItemID = this._wwaData.objectAttribute[partsID][Consts.ATR_ITEM];\n            this._monster = new wwa_monster.Monster(partsID, pos, monsterImgCoord, monsterStatus, monsterMessage, monsterItemID, function () {\n                _this._monsterWindow.hide();\n            });\n            this._player.startBattleWith(this._monster);\n        };\n        WWA.prototype._execObjectBuyEvent = function (pos, partsID, objAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            var playerPos = this._player.getPosition().getPartsCoord();\n            if (pos.x === playerPos.x && pos.y === playerPos.y && !this._wwaData.objectNoCollapseDefaultFlag) {\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n            }\n            this.setMessageQueue(message, true, false, partsID, wwa_data.PartsType.OBJECT, pos.clone());\n            this._yesNoChoicePartsCoord = pos;\n            this._yesNoChoicePartsID = partsID;\n            this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_OBJECT_PARTS;\n            this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n        };\n        WWA.prototype._execObjectSellEvent = function (pos, partsID, objAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            var playerPos = this._player.getPosition().getPartsCoord();\n            if (pos.x === playerPos.x && pos.y === playerPos.y && !this._wwaData.objectNoCollapseDefaultFlag) {\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n            }\n            this.setMessageQueue(message, true, false, partsID, wwa_data.PartsType.OBJECT, pos.clone());\n            this._yesNoChoicePartsCoord = pos;\n            this._yesNoChoicePartsID = partsID;\n            this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_OBJECT_PARTS;\n            this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n        };\n        WWA.prototype._execObjectItemEvent = function (pos, partsID, objAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            try {\n                this._player.addItem(partsID, this._wwaData.objectAttribute[partsID][Consts.ATR_NUMBER]);\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n                if (this._wwaData.objectAttribute[partsID][Consts.ATR_MODE] !== 0) {\n                }\n                else {\n                    this.setMessageQueue(message, false, false, partsID, wwa_data.PartsType.OBJECT, pos.clone());\n                    this.appearParts(pos, wwa_data.AppearanceTriggerType.OBJECT, partsID);\n                }\n            }\n            catch (e) {\n                if (this._wwaData.systemMessage[wwa_data.SystemMessage2.FULL_ITEM] !== \"BLANK\") {\n                    this.setMessageQueue(this._wwaData.systemMessage[wwa_data.SystemMessage2.FULL_ITEM] === \"\" ?\n                        \"これ以上、アイテムを持てません。\" :\n                        this._wwaData.systemMessage[wwa_data.SystemMessage2.FULL_ITEM], false, true);\n                }\n            }\n            this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n        };\n        WWA.prototype._execObjectDoorEvent = function (pos, partsID, objAttr) {\n            var itemID = this._wwaData.objectAttribute[partsID][Consts.ATR_ITEM];\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            if (this._player.hasItem(itemID)) {\n                if (this._wwaData.objectAttribute[partsID][Consts.ATR_MODE] === 0) {\n                    this._player.removeItemByPartsID(itemID);\n                }\n                this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n                this.setMessageQueue(message, false, false, partsID, wwa_data.PartsType.OBJECT, pos.clone());\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n                this.appearParts(pos, wwa_data.AppearanceTriggerType.OBJECT, partsID);\n                this._paintSkipByDoorOpen = true;\n            }\n        };\n        WWA.prototype._execObjectYesNoChoiceEvent = function (pos, partsID, objAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var message = this._wwaData.message[messageID];\n            var playerPos = this._player.getPosition().getPartsCoord();\n            if (pos.x === playerPos.x && pos.y === playerPos.y && !this._wwaData.objectNoCollapseDefaultFlag) {\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n            }\n            this.setMessageQueue(message, true, false, partsID, wwa_data.PartsType.OBJECT, pos.clone());\n            this._yesNoChoicePartsCoord = pos;\n            this._yesNoChoicePartsID = partsID;\n            this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_OBJECT_PARTS;\n            this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n        };\n        WWA.prototype._execObjectLocalGateEvent = function (pos, partsID, mapAttr) {\n            var playerPos = this._player.getPosition().getPartsCoord();\n            if (pos.x === playerPos.x && pos.y === playerPos.y && !this._wwaData.objectNoCollapseDefaultFlag) {\n                this._wwaData.mapObject[pos.y][pos.x] = 0;\n            }\n            var jx = this._wwaData.objectAttribute[partsID][Consts.ATR_JUMP_X];\n            var jy = this._wwaData.objectAttribute[partsID][Consts.ATR_JUMP_Y];\n            if (jx > Consts.RELATIVE_COORD_LOWER) {\n                jx = playerPos.x + jx - Consts.RELATIVE_COORD_BIAS;\n            }\n            if (jy > Consts.RELATIVE_COORD_LOWER) {\n                jy = playerPos.y + jy - Consts.RELATIVE_COORD_BIAS;\n            }\n            this.appearParts(pos, wwa_data.AppearanceTriggerType.OBJECT, partsID);\n            if (0 <= jx && 0 <= jy && jx < this._wwaData.mapWidth && jy < this._wwaData.mapWidth &&\n                (jx !== playerPos.x || jy !== playerPos.y)) {\n                this._player.jumpTo(new Position(this, jx, jy, 0, 0));\n                this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n            }\n        };\n        WWA.prototype._execObjectUrlGateEvent = function (pos, partsID, mapAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            if (!this._isURLGateEnable) {\n                return;\n            }\n            if (this._wwaData.message[wwa_data.SystemMessage1.ASK_LINK] === \"BLANK\") {\n                location.href = wwa_util.$escapedURI(this._wwaData.message[messageID].split(/\\s/g)[0]);\n                return;\n            }\n            this.setMessageQueue(this._wwaData.message[wwa_data.SystemMessage1.ASK_LINK] === \"\" ?\n                \"他のページにリンクします。\\nよろしいですか？\" :\n                this._wwaData.message[wwa_data.SystemMessage1.ASK_LINK], true, true);\n            this._yesNoChoicePartsCoord = pos;\n            this._yesNoChoicePartsID = partsID;\n            this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.CALL_BY_OBJECT_PARTS;\n            this._yesNoURL = this._wwaData.message[messageID].split(/\\s/g)[0];\n        };\n        WWA.prototype._execObjectScoreEvent = function (pos, partsID, mapAttr) {\n            var messageID = this._wwaData.objectAttribute[partsID][Consts.ATR_STRING];\n            var playerPos = this._player.getPosition().getPartsCoord();\n            var playerStatus = this._player.getStatus();\n            var score = 0;\n            score += this._wwaData.objectAttribute[partsID][Consts.ATR_ENERGY] * playerStatus.energy;\n            score += this._wwaData.objectAttribute[partsID][Consts.ATR_STRENGTH] * playerStatus.strength;\n            score += this._wwaData.objectAttribute[partsID][Consts.ATR_DEFENCE] * playerStatus.defence;\n            score += this._wwaData.objectAttribute[partsID][Consts.ATR_GOLD] * playerStatus.gold;\n            this._scoreWindow.update(score);\n            this._scoreWindow.show();\n            this.setMessageQueue(messageID === 0 ? \"スコアを表示します。\" : this._wwaData.message[messageID], false, false);\n            this.playSound(this._wwaData.objectAttribute[partsID][Consts.ATR_SOUND]);\n        };\n        WWA.prototype._execChoiceWindowRunningEvent = function () {\n            var partsType;\n            var gold;\n            if (--this._yesNoDispCounter === 0) {\n                if (this._yesNoJudge === wwa_data.YesNoState.YES) {\n                    if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_MAP_PARTS) {\n                        partsType = this._wwaData.mapAttribute[this._yesNoChoicePartsID][Consts.ATR_TYPE];\n                        if (partsType === Consts.MAP_URLGATE) {\n                            location.href = wwa_util.$escapedURI(this._yesNoURL);\n                        }\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_OBJECT_PARTS) {\n                        partsType = this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_TYPE];\n                        if (partsType === Consts.OBJECT_BUY) {\n                            if (this._player.hasItem(this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ITEM])) {\n                                this._player.removeItemByPartsID(this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ITEM]);\n                                gold = this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_GOLD];\n                                this._player.earnGold(gold);\n                                this.setStatusChangedEffect(new wwa_data.Status(0, 0, 0, gold));\n                                this.appearParts(this._yesNoChoicePartsCoord, wwa_data.AppearanceTriggerType.OBJECT, this._yesNoChoicePartsID);\n                            }\n                            else {\n                                if (this._wwaData.message[wwa_data.SystemMessage1.NO_ITEM] !== \"BLANK\") {\n                                    this._messageQueue.push(new wwa_message.MessageInfo(this._wwaData.message[wwa_data.SystemMessage1.NO_ITEM] === \"\" ?\n                                        \"アイテムを持っていない。\" : this._wwaData.message[wwa_data.SystemMessage1.NO_ITEM], true));\n                                }\n                                ;\n                            }\n                        }\n                        else if (partsType === Consts.OBJECT_SELL) {\n                            if (this._player.hasGold(this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_GOLD])) {\n                                if (this._player.canHaveMoreItems() || this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ITEM] === 0) {\n                                    if (this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ITEM] !== 0) {\n                                        this._player.addItem(this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ITEM]);\n                                    }\n                                    var status = new wwa_data.Status(this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ENERGY], this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_STRENGTH], this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_DEFENCE], -this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_GOLD]);\n                                    var pstatus = this._player.getStatusWithoutEquipments();\n                                    status.energy = status.energy > Consts.STATUS_MINUS_BORDER ?\n                                        Consts.STATUS_MINUS_BORDER - status.energy : status.energy;\n                                    this.setStatusChangedEffect(status);\n                                    this._player.addStatusAll(status);\n                                    if (this._player.isDead() && this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_ENERGY] !== 0) {\n                                        this.gameover();\n                                        return;\n                                    }\n                                    this.appearParts(this._yesNoChoicePartsCoord, wwa_data.AppearanceTriggerType.OBJECT, this._yesNoChoicePartsID);\n                                }\n                                else {\n                                    if (this._wwaData.systemMessage[wwa_data.SystemMessage2.FULL_ITEM] !== \"BLANK\") {\n                                        this._messageQueue.push(new wwa_message.MessageInfo(this._wwaData.systemMessage[wwa_data.SystemMessage2.FULL_ITEM] === \"\" ?\n                                            \"これ以上、アイテムを持てません。\" : this._wwaData.systemMessage[wwa_data.SystemMessage2.FULL_ITEM], true));\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._wwaData.message[wwa_data.SystemMessage1.NO_MONEY] !== \"BLANK\") {\n                                    this._messageQueue.push(new wwa_message.MessageInfo(this._wwaData.message[wwa_data.SystemMessage1.NO_MONEY] === \"\" ?\n                                        \"所持金がたりない。\" : this._wwaData.message[wwa_data.SystemMessage1.NO_MONEY], true));\n                                }\n                            }\n                        }\n                        else if (partsType === Consts.OBJECT_SELECT) {\n                            this.appearParts(this._yesNoChoicePartsCoord, wwa_data.AppearanceTriggerType.CHOICE_YES, this._yesNoChoicePartsID);\n                        }\n                        else if (partsType === Consts.OBJECT_URLGATE) {\n                            location.href = wwa_util.$escapedURI(this._yesNoURL);\n                        }\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_ITEM_USE) {\n                        this._player.readyToUseItem(this._yesNoUseItemPos);\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_QUICK_LOAD) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_LOAD])).classList.remove(\"onpress\");\n                        this._stopUpdateByLoadFlag = true;\n                        this._loadType = wwa_data.LoadType.QUICK_LOAD;\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_QUICK_SAVE) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_SAVE])).classList.remove(\"onpress\");\n                        this._quickSave();\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_RESTART_GAME) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.RESTART_GAME])).classList.remove(\"onpress\");\n                        this._stopUpdateByLoadFlag = true;\n                        this._loadType = wwa_data.LoadType.RESTART_GAME;\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_GOTO_WWA) {\n                        location.href = wwa_util.$escapedURI(Consts.WWA_HOME);\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.GOTO_WWA])).classList.remove(\"onpress\");\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_PASSWORD_LOAD) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_LOAD])).classList.remove(\"onpress\");\n                        this._player.setPasswordWindowWating();\n                        this._passwordWindow.show(wwa_password_window.Mode.LOAD);\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_PASSWORD_SAVE) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_SAVE])).classList.remove(\"onpress\");\n                        this._player.setPasswordWindowWating();\n                        this._passwordWindow.password = this._quickSave(true);\n                        this._passwordWindow.show(wwa_password_window.Mode.SAVE);\n                    }\n                    this._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                    this._setNextMessage();\n                    this._yesNoChoicePartsCoord = void 0;\n                    this._yesNoChoicePartsID = void 0;\n                    this._yesNoUseItemPos = void 0;\n                    this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.NONE;\n                    this._messageWindow.setYesNoChoice(false);\n                }\n                else if (this._yesNoJudge === wwa_data.YesNoState.NO) {\n                    if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_MAP_PARTS) {\n                        partsType = this._wwaData.mapAttribute[this._yesNoChoicePartsID][Consts.ATR_TYPE];\n                        if (partsType === Consts.MAP_URLGATE) {\n                        }\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_OBJECT_PARTS) {\n                        partsType = this._wwaData.objectAttribute[this._yesNoChoicePartsID][Consts.ATR_TYPE];\n                        if (partsType === Consts.OBJECT_BUY) {\n                        }\n                        else if (partsType === Consts.OBJECT_SELL) {\n                        }\n                        else if (partsType === Consts.OBJECT_SELECT) {\n                            this.appearParts(this._yesNoChoicePartsCoord, wwa_data.AppearanceTriggerType.CHOICE_NO, this._yesNoChoicePartsID);\n                        }\n                        else if (partsType === Consts.OBJECT_URLGATE) {\n                        }\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_ITEM_USE) {\n                        var bg = (wwa_util.$id(\"item\" + (this._yesNoUseItemPos - 1)));\n                        bg.classList.remove(\"onpress\");\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_QUICK_LOAD) {\n                        this._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                        this.onpasswordloadcalled();\n                        return;\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_QUICK_SAVE) {\n                        this._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                        this.onpasswordsavecalled();\n                        return;\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_RESTART_GAME) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.RESTART_GAME])).classList.remove(\"onpress\");\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_GOTO_WWA) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.GOTO_WWA])).classList.remove(\"onpress\");\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_PASSWORD_LOAD) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_LOAD])).classList.remove(\"onpress\");\n                    }\n                    else if (this._yesNoChoiceCallInfo === wwa_data.ChoiceCallInfo.CALL_BY_PASSWORD_SAVE) {\n                        (wwa_util.$id(wwa_data.sidebarButtonCellElementID[wwa_data.SidebarButton.QUICK_SAVE])).classList.remove(\"onpress\");\n                    }\n                    this._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                    this._setNextMessage();\n                    this._yesNoChoicePartsCoord = void 0;\n                    this._yesNoChoicePartsID = void 0;\n                    this._yesNoUseItemPos = void 0;\n                    this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.NONE;\n                    this._messageWindow.setYesNoChoice(false);\n                }\n            }\n        };\n        WWA.prototype.setMessageQueue = function (message, showChoice, isSystemMessage, partsID, partsType, partsPosition, messageDisplayed) {\n            if (partsID === void 0) { partsID = 0; }\n            if (partsType === void 0) { partsType = wwa_data.PartsType.OBJECT; }\n            if (partsPosition === void 0) { partsPosition = new Coord(0, 0); }\n            if (messageDisplayed === void 0) { messageDisplayed = false; }\n            this._messageQueue = this._messageQueue.concat(this.getMessageQueueByRawMessage(message, partsID, partsType, partsPosition));\n            if (this._lastMessage.isEndOfPartsEvent && this._reservedMoveMacroTurn !== void 0) {\n                this._player.setMoveMacroWaiting(this._reservedMoveMacroTurn);\n                this._reservedMoveMacroTurn = void 0;\n            }\n            if (this._messageQueue.length !== 0) {\n                var topmes = this._messageQueue.shift();\n                for (var i = 0; i < topmes.macro.length; i++) {\n                    this._execMacroListInNextFrame.push(topmes.macro[i]);\n                }\n                this._lastMessage = topmes;\n                if (topmes.message !== \"\") {\n                    this._messageWindow.setMessage(topmes.message);\n                    this._messageWindow.setYesNoChoice(showChoice);\n                    this._messageWindow.setPositionByPlayerPosition(this._faces.length !== 0, this._scoreWindow.isVisible(), isSystemMessage, this._player.getPosition(), this._camera.getPosition());\n                    this._player.setMessageWaiting();\n                    return true;\n                }\n                else {\n                    if (this._messageQueue.length === 0) {\n                        this._hideMessageWindow(messageDisplayed);\n                    }\n                    else {\n                        this._setNextMessage();\n                    }\n                }\n            }\n            return false;\n        };\n        WWA.prototype.getMessageQueueByRawMessage = function (message, partsID, partsType, partsPosition, isSystemMessage) {\n            if (isSystemMessage === void 0) { isSystemMessage = false; }\n            var messageMain = message\n                .split(/\\n\\<c\\>/i)[0]\n                .split(/\\<c\\>/i)[0]\n                .replace(/\\n\\<p\\>\\n/ig, \"<P>\")\n                .replace(/\\n\\<p\\>/ig, \"<P>\")\n                .replace(/\\<p\\>\\n/ig, \"<P>\")\n                .replace(/\\<p\\>/ig, \"<P>\");\n            var messageQueue = [];\n            if (messageMain !== \"\") {\n                var rawQueue = messageMain.split(/\\<p\\>/ig);\n                for (var j = 0; j < rawQueue.length; j++) {\n                    var lines = rawQueue[j].split(\"\\n\");\n                    var linesWithoutMacro = [];\n                    var macroQueue = [];\n                    for (var i = 0; i < lines.length; i++) {\n                        var matchInfo = lines[i].match(/(\\$(?:[a-zA-Z_][a-zA-Z0-9_]*)\\=(?:.*))/);\n                        if (matchInfo !== null && matchInfo.length >= 2) {\n                            var macro = wwa_message.parseMacro(this, partsID, partsType, partsPosition, matchInfo[1]);\n                            macroQueue.push(macro);\n                        }\n                        else if (!lines[i].match(/^\\$/)) {\n                            linesWithoutMacro.push(lines[i]);\n                        }\n                    }\n                    messageQueue.push(new wwa_message.MessageInfo(linesWithoutMacro.join(\"\\n\"), isSystemMessage, j === rawQueue.length - 1, macroQueue));\n                }\n            }\n            return messageQueue;\n        };\n        WWA.prototype.appearParts = function (pos, triggerType, triggerPartsID) {\n            if (triggerPartsID === void 0) { triggerPartsID = 0; }\n            var triggerPartsType;\n            var rangeMin = (triggerType === wwa_data.AppearanceTriggerType.CHOICE_NO) ?\n                Consts.APPERANCE_PARTS_MIN_INDEX_NO : Consts.APPERANCE_PARTS_MIN_INDEX;\n            var rangeMax = (triggerType === wwa_data.AppearanceTriggerType.CHOICE_YES) ?\n                Consts.APPERANCE_PARTS_MAX_INDEX_YES : Consts.APPERANCE_PARTS_MAX_INDEX;\n            var targetPartsID;\n            var targetPartsType;\n            var targetX;\n            var targetY;\n            var targetPos;\n            var i;\n            if (triggerType === wwa_data.AppearanceTriggerType.MAP) {\n                triggerPartsID = (triggerPartsID === 0) ? this._wwaData.map[pos.y][pos.x] : triggerPartsID;\n                triggerPartsType = wwa_data.PartsType.MAP;\n            }\n            else {\n                triggerPartsID = (triggerPartsID === 0) ? this._wwaData.mapObject[pos.y][pos.x] : triggerPartsID;\n                triggerPartsType = wwa_data.PartsType.OBJECT;\n            }\n            for (i = rangeMin; i <= rangeMax; i++) {\n                var base = Consts.ATR_APPERANCE_BASE + i * Consts.REL_ATR_APPERANCE_UNIT_LENGTH;\n                var idxID = base + Consts.REL_ATR_APPERANCE_ID;\n                var idxX = base + Consts.REL_ATR_APPERANCE_X;\n                var idxY = base + Consts.REL_ATR_APPERANCE_Y;\n                var idxType = base + Consts.REL_ATR_APPERANCE_TYPE;\n                targetPartsID = (triggerPartsType === wwa_data.PartsType.MAP) ?\n                    this._wwaData.mapAttribute[triggerPartsID][idxID] :\n                    this._wwaData.objectAttribute[triggerPartsID][idxID];\n                targetPartsType = (triggerPartsType === wwa_data.PartsType.MAP) ?\n                    this._wwaData.mapAttribute[triggerPartsID][idxType] :\n                    this._wwaData.objectAttribute[triggerPartsID][idxType];\n                targetX = (triggerPartsType === wwa_data.PartsType.MAP) ?\n                    this._wwaData.mapAttribute[triggerPartsID][idxX] :\n                    this._wwaData.objectAttribute[triggerPartsID][idxX];\n                targetY = (triggerPartsType === wwa_data.PartsType.MAP) ?\n                    this._wwaData.mapAttribute[triggerPartsID][idxY] :\n                    this._wwaData.objectAttribute[triggerPartsID][idxY];\n                if (targetX === Consts.PLAYER_COORD) {\n                    targetX = this._player.getPosition().getPartsCoord().x;\n                    this._player.resetEventExecutionInfo();\n                }\n                else if (targetX > Consts.RELATIVE_COORD_LOWER) {\n                    targetX = pos.x + targetX - Consts.RELATIVE_COORD_BIAS;\n                }\n                if (targetY === Consts.PLAYER_COORD) {\n                    targetY = this._player.getPosition().getPartsCoord().y;\n                    this._player.resetEventExecutionInfo();\n                }\n                else if (targetY > Consts.RELATIVE_COORD_LOWER) {\n                    targetY = pos.y + targetY - Consts.RELATIVE_COORD_BIAS;\n                }\n                if (targetX === 0 && targetY === 0) {\n                    continue;\n                }\n                try {\n                    targetPos = new wwa_data.Position(this, targetX, targetY, 0, 0);\n                    if (targetPartsType === wwa_data.PartsType.MAP) {\n                        if (targetPartsID >= this._wwaData.mapPartsMax) {\n                            throw new Error(\"背景パーツの範囲外IDが指定されました\");\n                        }\n                        this._wwaData.map[targetY][targetX] = targetPartsID;\n                    }\n                    else {\n                        if (targetPartsID >= this._wwaData.objPartsMax) {\n                            throw new Error(\"物体パーツの範囲外IDが指定されました\");\n                        }\n                        this._wwaData.mapObject[targetY][targetX] = targetPartsID;\n                        this._replaceRandomObject(new Coord(targetX, targetY));\n                        if (targetX === this._player.getPosition().getPartsCoord().x &&\n                            targetY === this._player.getPosition().getPartsCoord().y) {\n                            this._player.setPartsAppearedFlag();\n                        }\n                    }\n                }\n                catch (e) {\n                }\n            }\n        };\n        WWA.prototype.appearPartsByDirection = function (distance, targetPartsID, targetPartsType) {\n            var ppos = this._player.getPosition().getPartsCoord();\n            var pdir = this._player.getDir();\n            var signX = wwa_data.vx[pdir];\n            var signY = wwa_data.vy[pdir];\n            this.appearPartsEval(ppos, (signX >= 0 ? \"+\" : \"-\") + (Math.abs(signX) * distance), (signY >= 0 ? \"+\" : \"-\") + (Math.abs(signY) * distance), targetPartsID, targetPartsType);\n        };\n        WWA.prototype.appearPartsEval = function (triggerPartsPos, xstr, ystr, targetPartsID, targetPartsType) {\n            var targetX;\n            var targetY;\n            var ppos = this._player.getPosition().getPartsCoord();\n            if (xstr === \"P\" || xstr === \"p\") {\n                targetX = ppos.x;\n            }\n            else if (xstr[0] === \"+\") {\n                targetX = triggerPartsPos.x + parseInt(xstr.substr(1));\n            }\n            else if (xstr[0] === \"-\") {\n                targetX = triggerPartsPos.x - parseInt(xstr.substr(1));\n            }\n            else {\n                targetX = parseInt(xstr);\n                if (isNaN(targetX)) {\n                    throw new Error(\"座標として解釈できない文字が含まれています。\");\n                }\n            }\n            if (ystr === \"P\" || ystr === \"p\") {\n                targetY = ppos.y;\n            }\n            else if (ystr[0] === \"+\") {\n                targetY = triggerPartsPos.y + parseInt(ystr.substr(1));\n            }\n            else if (ystr[0] === \"-\") {\n                targetY = triggerPartsPos.y - parseInt(ystr.substr(1));\n            }\n            else {\n                targetY = parseInt(ystr);\n                if (isNaN(targetY)) {\n                    throw new Error(\"座標として解釈できない文字が含まれています。\");\n                }\n            }\n            try {\n                var targetPos = new wwa_data.Position(this, targetX, targetY, 0, 0);\n                if (targetPartsType === wwa_data.PartsType.MAP) {\n                    if (targetPartsID >= this._wwaData.mapPartsMax) {\n                        throw new Error(\"背景パーツの範囲外IDが指定されました\");\n                    }\n                    this._wwaData.map[targetY][targetX] = targetPartsID;\n                }\n                else {\n                    if (targetPartsID >= this._wwaData.objPartsMax) {\n                        throw new Error(\"物体パーツの範囲外IDが指定されました\");\n                    }\n                    this._wwaData.mapObject[targetY][targetX] = targetPartsID;\n                    this._replaceRandomObject(new Coord(targetX, targetY));\n                    if (targetX === this._player.getPosition().getPartsCoord().x &&\n                        targetY === this._player.getPosition().getPartsCoord().y) {\n                        this._player.setPartsAppearedFlag();\n                    }\n                }\n            }\n            catch (e) {\n            }\n        };\n        WWA.prototype._replaceRandomObject = function (pos) {\n            var id = this._wwaData.mapObject[pos.y][pos.x];\n            var type = this._wwaData.objectAttribute[id][Consts.ATR_TYPE];\n            var newId;\n            var randv;\n            if (type !== Consts.OBJECT_RANDOM) {\n                return;\n            }\n            for (var i = 0; i < Consts.RANDOM_ITERATION_MAX; i++) {\n                randv = Math.floor(Math.random() * 10);\n                newId = this._wwaData.objectAttribute[id][Consts.ATR_RANDOM_BASE + randv];\n                if (newId >= this._wwaData.objPartsMax) {\n                    newId = 0;\n                    break;\n                }\n                if (this._wwaData.objectAttribute[newId][Consts.ATR_TYPE] !== Consts.OBJECT_RANDOM) {\n                    break;\n                }\n                id = newId;\n            }\n            this._wwaData.mapObject[pos.y][pos.x] = newId;\n        };\n        WWA.prototype._replaceRandomObjectsInScreen = function () {\n            var camPos = this._camera.getPosition().getPartsCoord();\n            var xLeft = Math.max(0, camPos.x - 1);\n            var xRight = Math.min(this._wwaData.mapWidth - 1, camPos.x + Consts.H_PARTS_NUM_IN_WINDOW);\n            var yTop = Math.max(0, camPos.y - 1);\n            var yBottom = Math.min(this._wwaData.mapWidth - 1, camPos.y + Consts.V_PARTS_NUM_IN_WINDOW);\n            for (var x = xLeft; x <= xRight; x++) {\n                for (var y = yTop; y <= yBottom; y++) {\n                    this._replaceRandomObject(new Coord(x, y));\n                }\n            }\n        };\n        WWA.prototype._replaceAllRandomObjects = function () {\n            for (var x = 0; x < this._wwaData.mapWidth; x++) {\n                for (var y = 0; y < this._wwaData.mapWidth; y++) {\n                    this._replaceRandomObject(new Coord(x, y));\n                }\n            }\n        };\n        WWA.prototype.gameover = function () {\n            var jx = this._wwaData.gameoverX;\n            var jy = this._wwaData.gameoverY;\n            if (this._messageWindow.isVisible()) {\n                this._yesNoJudge = wwa_data.YesNoState.UNSELECTED;\n                this._messageQueue = [];\n                this._messageWindow.hide();\n                this._yesNoChoicePartsCoord = void 0;\n                this._yesNoChoicePartsID = void 0;\n                this._yesNoUseItemPos = void 0;\n                this._yesNoChoiceCallInfo = wwa_data.ChoiceCallInfo.NONE;\n                this._messageWindow.setYesNoChoice(false);\n            }\n            this._waitTimeInCurrentFrame = Consts.GAMEOVER_FRAME_INTERVAL;\n            this._temporaryInputDisable = true;\n            this._player.jumpTo(new Position(this, jx, jy, 0, 0));\n        };\n        WWA.prototype.setYesNoInput = function (yesNo) {\n            this._yesNoJudgeInNextFrame = yesNo;\n        };\n        WWA.prototype.getYesNoState = function () {\n            if (this._yesNoJudgeInNextFrame !== void 0) {\n                return this._yesNoJudgeInNextFrame;\n            }\n            return this._yesNoJudge;\n        };\n        WWA.prototype.setStatusChangedEffect = function (additionalStatus) {\n            if (additionalStatus.strength !== 0) {\n                wwa_util.$id(\"disp-strength\").classList.add(\"onpress\");\n                this._statusPressCounter.strength = Consts.STATUS_CHANGED_EFFECT_FRAME_NUM;\n            }\n            if (additionalStatus.defence !== 0) {\n                wwa_util.$id(\"disp-defence\").classList.add(\"onpress\");\n                this._statusPressCounter.defence = Consts.STATUS_CHANGED_EFFECT_FRAME_NUM;\n            }\n            if (additionalStatus instanceof wwa_data.Status) {\n                if (additionalStatus.energy !== 0) {\n                    wwa_util.$id(\"disp-energy\").classList.add(\"onpress\");\n                    this._statusPressCounter.energy = Consts.STATUS_CHANGED_EFFECT_FRAME_NUM;\n                }\n                if (additionalStatus.gold !== 0) {\n                    wwa_util.$id(\"disp-gold\").classList.add(\"onpress\");\n                    this._statusPressCounter.gold = Consts.STATUS_CHANGED_EFFECT_FRAME_NUM;\n                }\n            }\n        };\n        WWA.prototype.setPartsOnPosition = function (partsType, id, pos) {\n            if (partsType === wwa_data.PartsType.MAP) {\n                if (id >= this._wwaData.mapPartsMax) {\n                    this._wwaData.map[pos.y][pos.x] = 0;\n                }\n                this._wwaData.map[pos.y][pos.x] = id;\n            }\n            else {\n                if (id >= this._wwaData.objPartsMax) {\n                    this._wwaData.mapObject[pos.y][pos.x] = 0;\n                }\n                this._wwaData.mapObject[pos.y][pos.x] = id;\n            }\n        };\n        WWA.prototype._countSamePartsLength = function (data, startPos) {\n            var i;\n            for (i = startPos + 1; i < data.length; i++) {\n                if (data[i] !== data[i - 1]) {\n                    break;\n                }\n            }\n            return i - startPos;\n        };\n        WWA.prototype._compressMap = function (map) {\n            var dest = [];\n            for (var y = 0; y < map.length; y++) {\n                dest[y] = [];\n                for (var x = 0; x < map[y].length;) {\n                    var len = this._countSamePartsLength(map[y], x);\n                    dest[y].push([map[y][x], len]);\n                    x += (len);\n                }\n            }\n            return dest;\n        };\n        WWA.prototype._decompressMap = function (compressedMap) {\n            var dest = [];\n            var x;\n            for (var y = 0; y < compressedMap.length; y++) {\n                dest[y] = [];\n                x = 0;\n                for (var i = 0; i < compressedMap[y].length; i++) {\n                    var len = compressedMap[y][i][1];\n                    for (var j = 0; j < len; j++) {\n                        dest[y].push(compressedMap[y][i][0]);\n                    }\n                }\n            }\n            return dest;\n        };\n        WWA.prototype._generateMapDataHash = function (data) {\n            var text = \"A\";\n            var len = 0;\n            var x = 0;\n            var y = 0;\n            for (y = 0; y < data.map.length; y++) {\n                for (x = 0; x < data.map[y].length;) {\n                    len = this._countSamePartsLength(data.map[y], x);\n                    text += (data.map[y][x] + \"|\" + len + \"/\");\n                    x += (len);\n                }\n                for (x = 0; x < data.mapObject[y].length;) {\n                    len = this._countSamePartsLength(data.mapObject[y], x);\n                    text += (data.mapObject[y][x] + \"|\" + len + \"/\");\n                    x += (len);\n                }\n            }\n            for (var mapi = 0; mapi < data.mapAttribute.length; mapi++) {\n                for (var mapatri = 0; mapatri < data.mapAttribute[mapi].length; mapatri++) {\n                    text += data.mapAttribute[mapi][mapatri] + \"/\";\n                }\n            }\n            for (var obji = 0; obji < data.objectAttribute.length; obji++) {\n                for (var objatri = 0; objatri < data.objectAttribute[obji].length; objatri++) {\n                    text += data.objectAttribute[obji][objatri] + \"/\";\n                }\n            }\n            text += \"Z\";\n            return CryptoJS.MD5(text).toString();\n        };\n        WWA.prototype._generateSaveDataHash = function (data) {\n            var maphash = this._generateMapDataHash(data);\n            var text = maphash;\n            var keyArray = [];\n            for (var key in data) {\n                if (key === \"map\" || key === \"mapObject\" ||\n                    key === \"mapCompressed\" || key === \"mapObjectCompressed\" ||\n                    key === \"mapAttribute\" || key === \"objectAttribute\" ||\n                    key === \"checkString\") {\n                    continue;\n                }\n                keyArray.push(key);\n            }\n            keyArray.sort();\n            for (var i = 0; i < keyArray.length; i++) {\n                text += wwa_util.arr2str4save(data[keyArray[i]]);\n            }\n            return CryptoJS.MD5(text).toString();\n        };\n        WWA.prototype._quickSave = function (isPassword) {\n            if (isPassword === void 0) { isPassword = false; }\n            var qd = JSON.parse(JSON.stringify(this._wwaData));\n            var pc = this._player.getPosition().getPartsCoord();\n            var st = this._player.getStatusWithoutEquipments();\n            qd.itemBox = this._player.getCopyOfItemBox();\n            qd.playerX = pc.x;\n            qd.playerY = pc.y;\n            qd.statusEnergyMax = this._player.getEnergyMax();\n            qd.statusEnergy = st.energy;\n            qd.statusStrength = st.strength;\n            qd.statusDefence = st.defence;\n            qd.statusGold = st.gold;\n            qd.moves = this._player.getMoveCount();\n            if (isPassword) {\n                qd.checkOriginalMapString = this._generateMapDataHash(this._restartData);\n                qd.mapCompressed = this._compressMap(qd.map);\n                qd.mapObjectCompressed = this._compressMap(qd.mapObject);\n                qd.checkString = this._generateSaveDataHash(qd);\n                qd.map = void 0;\n                qd.mapObject = void 0;\n            }\n            qd.message = void 0;\n            qd.mapAttribute = void 0;\n            qd.objectAttribute = void 0;\n            if (isPassword) {\n                var s = JSON.stringify(qd);\n                return CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(s), \"^ /\" + (this._wwaData.worldPassNumber * 231 + 8310 + qd.checkOriginalMapString) + \"P+>A[]\").toString();\n            }\n            this._quickSaveData = qd;\n            util.$id(\"cell-load\").textContent = \"Quick Load\";\n            return \"\";\n        };\n        WWA.prototype._decodePassword = function (pass) {\n            var ori = this._generateMapDataHash(this._restartData);\n            try {\n                var json = CryptoJS.AES.decrypt(pass, \"^ /\" + (this._wwaData.worldPassNumber * 231 + 8310 + ori) + \"P+>A[]\").toString(CryptoJS.enc.Utf8);\n            }\n            catch (e) {\n                throw new Error(\"データが破損しています。\\n\" + e.message);\n            }\n            var obj;\n            try {\n                obj = JSON.parse(json);\n            }\n            catch (e) {\n                throw new Error(\"マップデータ以外のものが暗号化されたか、マップデータに何かが不足しているようです。\\nJSON PARSE FAILED\");\n            }\n            return obj;\n        };\n        WWA.prototype._quickLoad = function (restart, password, apply) {\n            if (restart === void 0) { restart = false; }\n            if (password === void 0) { password = null; }\n            if (apply === void 0) { apply = true; }\n            if (!restart && this._quickSaveData === void 0 && password === null) {\n                throw new Error(\"セーブデータがありません。\");\n            }\n            var newData;\n            if (password !== null) {\n                newData = this._decodePassword(password);\n            }\n            else {\n                newData = JSON.parse(JSON.stringify(restart ? this._restartData : this._quickSaveData));\n            }\n            newData.message = JSON.parse(JSON.stringify(this._restartData.message));\n            newData.mapAttribute = JSON.parse(JSON.stringify(this._restartData.mapAttribute));\n            newData.objectAttribute = JSON.parse(JSON.stringify(this._restartData.objectAttribute));\n            if (newData.map === void 0) {\n                newData.map = this._decompressMap(newData.mapCompressed);\n                newData.mapCompressed = void 0;\n            }\n            if (newData.mapObject === void 0) {\n                newData.mapObject = this._decompressMap(newData.mapObjectCompressed);\n                newData.mapObjectCompressed = void 0;\n            }\n            if (password !== null) {\n                var checkString = this._generateSaveDataHash(newData);\n                if (newData.checkString !== checkString) {\n                    throw new Error(\"データが壊れているようです。\\nInvalid hash (ALL DATA)= \" + newData.checkString + \" \" + this._generateSaveDataHash(newData));\n                }\n                var checkOriginalMapString = this._generateMapDataHash(this._restartData);\n                if (newData.checkOriginalMapString !== checkOriginalMapString) {\n                    throw new Error(\"管理者によってマップが変更されたようです。\\nInvalid hash (ORIGINAL MAP)= \" + newData.checkString + \" \" + this._generateSaveDataHash(newData));\n                }\n                console.log(\"Valid Password!\");\n            }\n            if (apply) {\n                this._applyQuickLoad(newData);\n            }\n            return newData;\n        };\n        WWA.prototype._applyQuickLoad = function (newData) {\n            this._player.setEnergyMax(newData.statusEnergyMax);\n            this._player.setEnergy(newData.statusEnergy);\n            this._player.setStrength(newData.statusStrength);\n            this._player.setDefence(newData.statusDefence);\n            this._player.setGold(newData.statusGold);\n            this._player.setMoveCount(newData.moves);\n            this._player.clearItemBox();\n            for (var i = 0; i < newData.itemBox.length; i++) {\n                this._player.addItem(newData.itemBox[i], i + 1, true);\n            }\n            this._player.systemJumpTo(new wwa_data.Position(this, newData.playerX, newData.playerY, 0, 0));\n            if (newData.bgm === 0) {\n                this.playSound(wwa_data.SystemSound.NO_SOUND);\n            }\n            else {\n                this.playSound(newData.bgm);\n            }\n            this.setImgClick(new Coord(newData.imgClickX, newData.imgClickY));\n            if (this.getObjectIdByPosition(this._player.getPosition()) !== 0) {\n                this._player.setPartsAppearedFlag();\n            }\n            this._wwaData = newData;\n            this._replaceAllRandomObjects();\n            this.updateCSSRule();\n        };\n        WWA.prototype._restartGame = function () {\n            this._quickLoad(true);\n        };\n        WWA.prototype._fadeout = function (callback) {\n            var borderWidth = 0;\n            var size = Consts.MAP_WINDOW_WIDTH;\n            var v = Consts.FADEOUT_SPEED;\n            var elm = wwa_util.$id(\"wwa-fader\");\n            elm.style.display = \"block\";\n            var timer = setInterval(function () {\n                borderWidth += v;\n                size -= v * 2;\n                if (size <= 0 || borderWidth * 2 > Consts.MAP_WINDOW_WIDTH) {\n                    elm.removeAttribute(\"style\");\n                    elm.style.display = \"block\";\n                    elm.style.borderWidth = \"0\";\n                    elm.style.width = Consts.MAP_WINDOW_WIDTH + \"px\";\n                    elm.style.height = Consts.MAP_WINDOW_HEIGHT + \"px\";\n                    elm.style.backgroundColor = \"#808080\";\n                    clearInterval(timer);\n                    callback();\n                    return;\n                }\n                elm.style.width = size + \"px\";\n                elm.style.height = size + \"px\";\n                elm.style.borderWidth = borderWidth + \"px\";\n            }, 20);\n        };\n        WWA.prototype.moveObjects = function (playerIsMoving) {\n            var camPos = this._camera.getPosition();\n            var pPos = this._player.getPosition();\n            var camCoord = camPos.getPartsCoord();\n            var leftX = camPos.getPartsCoord().x;\n            var topY = camPos.getPartsCoord().y;\n            var objectsInNextFrame;\n            var localX, localY;\n            if (this.getMapAttributeByPosition(this._player.getPosition(), Consts.ATR_TYPE) === Consts.MAP_LOCALGATE ||\n                this.getObjectAttributeByPosition(this._player.getPosition(), Consts.ATR_TYPE) === Consts.OBJECT_LOCALGATE) {\n                return;\n            }\n            objectsInNextFrame = new Array(Consts.V_PARTS_NUM_IN_WINDOW + 2);\n            this.hoge = new Array(Consts.V_PARTS_NUM_IN_WINDOW + 2);\n            for (localY = -1; localY <= Consts.V_PARTS_NUM_IN_WINDOW; localY++) {\n                objectsInNextFrame[localY + 1] = new Array(Consts.H_PARTS_NUM_IN_WINDOW + 2);\n                this.hoge[localY + 1] = new Array(Consts.H_PARTS_NUM_IN_WINDOW + 2);\n                for (localX = -1; localX <= Consts.H_PARTS_NUM_IN_WINDOW; localX++) {\n                    if (topY + localY < 0 || topY + localY >= this._wwaData.mapWidth ||\n                        leftX + localX < 0 || leftX + localX >= this._wwaData.mapWidth) {\n                        objectsInNextFrame[localY + 1][localX + 1] = 0;\n                        this.hoge[localY + 1][localX + 1] = 0;\n                        continue;\n                    }\n                    try {\n                        var pos = new Position(this, leftX + localX, topY + localY, 0, 0);\n                        var posc = pos.getPartsCoord();\n                    }\n                    catch (e) {\n                        objectsInNextFrame[localY + 1][localX + 1] = 0;\n                        this.hoge[localY + 1][localX + 1] = 0;\n                        continue;\n                    }\n                    var objID = this._wwaData.mapObject[posc.y][posc.x];\n                    objectsInNextFrame[localY + 1][localX + 1] = this._wwaData.mapObject[posc.y][posc.x];\n                    this.hoge[localY + 1][localX + 1] = -this._wwaData.mapObject[posc.y][posc.x];\n                }\n            }\n            for (localX = -1; localX <= Consts.H_PARTS_NUM_IN_WINDOW; localX++) {\n                if (leftX + localX < 0 || leftX + localX >= this._wwaData.mapWidth) {\n                    continue;\n                }\n                for (localY = -1; localY <= Consts.V_PARTS_NUM_IN_WINDOW; localY++) {\n                    if (topY + localY < 0 || topY + localY >= this._wwaData.mapWidth) {\n                        continue;\n                    }\n                    try {\n                        var pos = new Position(this, leftX + localX, topY + localY, 0, 0);\n                        var posc = pos.getPartsCoord();\n                    }\n                    catch (e) {\n                        continue;\n                    }\n                    var partsID = this._wwaData.mapObject[posc.y][posc.x];\n                    if (partsID === 0 ||\n                        this._wwaData.objectAttribute[partsID][Consts.ATR_TYPE] === Consts.OBJECT_LOCALGATE ||\n                        this._wwaData.objectAttribute[partsID][Consts.ATR_TYPE] === Consts.OBJECT_RANDOM) {\n                        continue;\n                    }\n                    if (this._wwaData.objectAttribute[partsID][Consts.ATR_MOVE] !== wwa_data.MoveType.CHASE_PLAYER &&\n                        this._wwaData.objectAttribute[partsID][Consts.ATR_MOVE] !== wwa_data.MoveType.RUN_OUT &&\n                        this._wwaData.objectAttribute[partsID][Consts.ATR_MOVE] !== wwa_data.MoveType.HANG_AROUND) {\n                        continue;\n                    }\n                    var moveMode = this._wwaData.objectAttribute[partsID][Consts.ATR_MOVE];\n                    if (moveMode !== wwa_data.MoveType.HANG_AROUND) {\n                        var candCoord = this._getCandidateCoord(playerIsMoving, pos, moveMode);\n                        var xCand = new Coord(candCoord.x, posc.y);\n                        var yCand = new Coord(posc.x, candCoord.y);\n                        var thirdCand = null;\n                        var randomCand;\n                        if (this._objectCanMoveTo(playerIsMoving, candCoord, objectsInNextFrame)) {\n                            this._setObjectsInNextFrame(posc, candCoord, leftX, topY, objectsInNextFrame, partsID);\n                        }\n                        else {\n                            var mode = this._getSecondCandidateMoveMode(playerIsMoving, posc, candCoord, xCand, yCand, this._wwaData.objectAttribute[partsID][Consts.ATR_TYPE] === Consts.OBJECT_MONSTER, objectsInNextFrame);\n                            if (mode === wwa_data.SecondCandidateMoveType.MODE_X) {\n                                this._setObjectsInNextFrame(posc, xCand, leftX, topY, objectsInNextFrame, partsID);\n                            }\n                            else if (mode === wwa_data.SecondCandidateMoveType.MODE_Y) {\n                                this._setObjectsInNextFrame(posc, yCand, leftX, topY, objectsInNextFrame, partsID);\n                            }\n                            else {\n                                thirdCand = this._getThirdCandidate(playerIsMoving, pos, candCoord, moveMode, objectsInNextFrame);\n                                if (thirdCand !== null && this._wwaData.version >= 31) {\n                                    this._setObjectsInNextFrame(posc, thirdCand, leftX, topY, objectsInNextFrame, partsID);\n                                }\n                                else {\n                                    randomCand = this._getRandomMoveCoord(playerIsMoving, pos, objectsInNextFrame);\n                                    this._setObjectsInNextFrame(posc, randomCand, leftX, topY, objectsInNextFrame, partsID);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        randomCand = this._getRandomMoveCoord(playerIsMoving, pos, objectsInNextFrame);\n                        this._setObjectsInNextFrame(posc, randomCand, leftX, topY, objectsInNextFrame, partsID);\n                    }\n                }\n            }\n        };\n        WWA.prototype._getCandidateCoord = function (playerIsMoving, currentPos, moveType) {\n            var currentCoord = currentPos.getPartsCoord();\n            var playerOffsetCoord = this._player.getPosition().getOffsetCoord();\n            var playerCoord = this._player.getPosition().getPartsCoord();\n            try {\n                var playerNextCoord = playerIsMoving ? this._player.getPosition().getNextJustPosition().getPartsCoord() : this._player.getPosition().getPartsCoord();\n            }\n            catch (e) {\n                throw new Error(\"予期せぬ方向への移動のようです。\");\n            }\n            var candidateCoord = currentCoord.clone();\n            var dx = 0;\n            var dy = 0;\n            if (moveType === wwa_data.MoveType.CHASE_PLAYER) {\n                dx =\n                    currentCoord.x > playerNextCoord.x ? 1 :\n                        currentCoord.x < playerNextCoord.x ? -1 : 0;\n                dy =\n                    currentCoord.y > playerNextCoord.y ? 1 :\n                        currentCoord.y < playerNextCoord.y ? -1 : 0;\n            }\n            else if (moveType === wwa_data.MoveType.RUN_OUT) {\n                dx =\n                    currentCoord.x > playerNextCoord.x ? -1 :\n                        currentCoord.x < playerNextCoord.x ? 1 : 0;\n                dy =\n                    currentCoord.y > playerNextCoord.y ? -1 :\n                        currentCoord.y < playerNextCoord.y ? 1 : 0;\n            }\n            candidateCoord.x -= dx;\n            candidateCoord.y -= dy;\n            candidateCoord.x = Math.min(this._wwaData.mapWidth - 1, Math.max(0, candidateCoord.x));\n            candidateCoord.y = Math.min(this._wwaData.mapWidth - 1, Math.max(0, candidateCoord.y));\n            return candidateCoord;\n        };\n        WWA.prototype._getSecondCandidateMoveMode = function (playerIsMoving, current, firstCandidate, xCand, yCand, isMonster, objectsInNextFrame) {\n            if (playerIsMoving && ((this._player.getDir() === wwa_data.Direction.UP || this._player.getDir() === wwa_data.Direction.DOWN) && isMonster ||\n                (this._player.getDir() === wwa_data.Direction.LEFT || this._player.getDir() === wwa_data.Direction.RIGHT) && !isMonster)) {\n                if (this._objectCanMoveTo(playerIsMoving, yCand, objectsInNextFrame)) {\n                    return wwa_data.SecondCandidateMoveType.MODE_Y;\n                }\n                if (this._objectCanMoveTo(playerIsMoving, xCand, objectsInNextFrame)) {\n                    return wwa_data.SecondCandidateMoveType.MODE_X;\n                }\n                return wwa_data.SecondCandidateMoveType.UNDECIDED;\n            }\n            if (this._objectCanMoveTo(playerIsMoving, xCand, objectsInNextFrame)) {\n                return wwa_data.SecondCandidateMoveType.MODE_X;\n            }\n            if (this._objectCanMoveTo(playerIsMoving, yCand, objectsInNextFrame)) {\n                return wwa_data.SecondCandidateMoveType.MODE_Y;\n            }\n            return wwa_data.SecondCandidateMoveType.UNDECIDED;\n        };\n        WWA.prototype._getThirdCandidate = function (playerIsMoving, currentPos, firstCandidate, mode, objectsInNextFrame) {\n            var dir = mode === wwa_data.MoveType.CHASE_PLAYER ? 1 :\n                mode === wwa_data.MoveType.RUN_OUT ? -1 : 0;\n            var npCoord = playerIsMoving ? this._player.getPosition().getNextJustPosition().getPartsCoord() : this._player.getPosition().getPartsCoord();\n            var currentCoord = currentPos.getPartsCoord();\n            var testCoord;\n            if (npCoord.x !== currentCoord.x) {\n                testCoord = new Coord(firstCandidate.x, currentCoord.y + 1 * dir);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n                testCoord = new Coord(firstCandidate.x, currentCoord.y - 1 * dir);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n                testCoord = new Coord(currentCoord.x, currentCoord.y + 1 * dir);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n                testCoord = new Coord(currentCoord.x, currentCoord.y - 1 * dir);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n            }\n            if (npCoord.y !== currentCoord.y) {\n                testCoord = new Coord(currentCoord.x + 1 * dir, firstCandidate.y);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n                testCoord = new Coord(currentCoord.x - 1 * dir, firstCandidate.y);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n                testCoord = new Coord(currentCoord.x + 1 * dir, currentCoord.y);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n                testCoord = new Coord(currentCoord.x - 1 * dir, currentCoord.y);\n                if (this._objectCanMoveTo(playerIsMoving, testCoord, objectsInNextFrame)) {\n                    return testCoord;\n                }\n            }\n            return null;\n        };\n        WWA.prototype._getRandomMoveCoord = function (playerIsMoving, currentPos, objectsInNextFrame) {\n            var currentCoord = currentPos.getPartsCoord();\n            var resultCoord = currentCoord.clone();\n            var iterNum = this._wwaData.version < 31 ? Consts.RANDOM_MOVE_ITERATION_NUM_BEFORE_V31 : Consts.RANDOM_MOVE_ITERATION_NUM;\n            for (var i = 0; i < iterNum; i++) {\n                var rand = Math.floor(Math.random() * 8);\n                resultCoord.x = currentCoord.x + wwa_data.vx[rand];\n                resultCoord.y = currentCoord.y + wwa_data.vy[rand];\n                if (this._objectCanMoveTo(playerIsMoving, resultCoord, objectsInNextFrame)) {\n                    return resultCoord;\n                }\n            }\n            return currentCoord;\n        };\n        WWA.prototype.isPrevFrameEventExecuted = function () {\n            return this._prevFrameEventExected;\n        };\n        WWA.prototype._objectCanMoveTo = function (playerIsMoving, candCoord, objectsInNextFrame) {\n            if (candCoord.x < 0 || candCoord.y < 0 || this._wwaData.mapWidth <= candCoord.x || this._wwaData.mapWidth <= candCoord.y) {\n                return false;\n            }\n            var mapID = this._wwaData.map[candCoord.y][candCoord.x];\n            var objID = this._wwaData.mapObject[candCoord.y][candCoord.x];\n            var mapType = this._wwaData.mapAttribute[mapID][Consts.ATR_TYPE];\n            var camPos = this._camera.getPosition();\n            var leftX = camPos.getPartsCoord().x;\n            var topY = camPos.getPartsCoord().y;\n            if (mapID === 0 && !this.isOldMap() || mapType === Consts.MAP_WALL) {\n                return false;\n            }\n            var targetX = candCoord.x - leftX + 1;\n            var targetY = candCoord.y - topY + 1;\n            if (0 <= targetX && 0 <= targetY &&\n                targetX < objectsInNextFrame.length && targetY < objectsInNextFrame.length) {\n                if (objectsInNextFrame[targetY][targetX] !== 0) {\n                    return false;\n                }\n            }\n            else {\n                if (objID !== 0) {\n                    return false;\n                }\n            }\n            if (playerIsMoving) {\n                if (this._player.getPosition().getNextJustPosition().getPartsCoord().equals(candCoord)) {\n                    return false;\n                }\n            }\n            else {\n                if (this._player.getPosition().getPartsCoord().equals(candCoord)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        WWA.prototype._setObjectsInNextFrame = function (currentCoord, candCoord, leftX, topY, objectsInNextFrame, partsID) {\n            var targetX = candCoord.x - leftX + 1;\n            var targetY = candCoord.y - topY + 1;\n            if (0 <= candCoord.x && candCoord.x <= this._wwaData.mapWidth && 0 <= candCoord.y && candCoord.y <= this._wwaData.mapWidth) {\n                if (0 <= targetX && targetX < objectsInNextFrame.length && 0 <= targetY && targetY < objectsInNextFrame.length) {\n                    objectsInNextFrame[currentCoord.y - topY + 1][currentCoord.x - leftX + 1] = 0;\n                    objectsInNextFrame[candCoord.y - topY + 1][candCoord.x - leftX + 1] = partsID;\n                    this.hoge[candCoord.y - topY + 1][candCoord.x - leftX + 1] = partsID;\n                }\n                this._objectMovingDataManager.add(partsID, currentCoord.convertIntoPosition(this), candCoord.convertIntoPosition(this), currentCoord.getDirectionTo(candCoord));\n            }\n        };\n        WWA.prototype.launchBattleEstimateWindow = function () {\n            var cpParts = this._camera.getPosition().getPartsCoord();\n            var xLeft = Math.max(0, cpParts.x);\n            var xRight = Math.min(this._wwaData.mapWidth - 1, cpParts.x + Consts.H_PARTS_NUM_IN_WINDOW - 1);\n            var yTop = Math.max(0, cpParts.y);\n            var yBottom = Math.min(this._wwaData.mapWidth - 1, cpParts.y + Consts.V_PARTS_NUM_IN_WINDOW - 1);\n            var monsterList = [];\n            this.playSound(wwa_data.SystemSound.DECISION);\n            for (var x = xLeft; x <= xRight; x++) {\n                for (var y = yTop; y <= yBottom; y++) {\n                    var pid = this._wwaData.mapObject[y][x];\n                    if (this._wwaData.objectAttribute[pid][Consts.ATR_TYPE] === Consts.OBJECT_MONSTER) {\n                        if (monsterList.indexOf(pid) === -1) {\n                            monsterList.push(pid);\n                        }\n                    }\n                }\n            }\n            if (monsterList.length === 0) {\n                return false;\n            }\n            this._battleEstimateWindow.update(this._player.getStatus(), monsterList);\n            this._battleEstimateWindow.show();\n            this._player.setEstimateWindowWating();\n            return true;\n        };\n        WWA.prototype.hideBattleEstimateWindow = function () {\n            this._battleEstimateWindow.hide();\n            this._player.clearEstimateWindowWaiting();\n        };\n        WWA.prototype.hidePasswordWindow = function (isCancel) {\n            if (isCancel === void 0) { isCancel = false; }\n            this._passwordWindow.hide();\n            if (isCancel || this._passwordWindow.mode === wwa_password_window.Mode.SAVE) {\n                this._player.clearPasswordWindowWaiting();\n                return;\n            }\n            try {\n                var data = this._quickLoad(false, this._passwordWindow.password, false);\n            }\n            catch (e) {\n                this._player.clearPasswordWindowWaiting();\n                alert(\"パスワードが正常ではありません。\\nエラー詳細:\\n\" + e.message);\n                return;\n            }\n            this._passwordLoadExecInNextFrame = true;\n            this._passwordSaveExtractData = data;\n        };\n        WWA.prototype._displayHelp = function () {\n            if (this._player.isControllable()) {\n                this.setMessageQueue(\"　【ショートカットキーの一覧】\\n\" +\n                    \"Ｆ１、Ｍ：戦闘結果予測の表示\\n\" +\n                    \"Ｆ３：復帰用パスワード入力\\n\" +\n                    \"Ｆ４：復帰用パスワード表示\\n\" +\n                    \"Ｆ５：一時保存データの読み込み\\n\" +\n                    \"Ｆ６：データの一時保存\\n\" +\n                    \"Ｆ７：初めからスタート\\n\" +\n                    \"Ｆ８：ＷＷＡ公式ページにリンク\\n\" +\n                    \"Ｆ１２：このリストの表示\\n\" +\n                    \"キーボードの「１２３、ＱＷＥ、ＡＳＤ、ＺＸＣ」は右のアイテムボックスに対応。\\n\" +\n                    \"「Ｅｎｔｅｒ、Ｙ」はＹｅｓ,\\n\" +\n                    \"「Ｅｓｃ、Ｎ」はＮｏに対応。\\n\" +\n                    \"　　　Ｉ: 移動速度を落とす／\\n\" +\n                    \"Ｆ２、Ｐ: 移動速度を上げる\\n\" +\n                    \"　　現在の移動回数：\" + this._player.getMoveCount() + \"\\n\" +\n                    \"　WWA Wing バージョン:\" + Consts.VERSION_WWAJS + \"\\n\" +\n                    \"　マップデータ バージョン: \" +\n                    Math.floor(this._wwaData.version / 10) + \".\" + this._wwaData.version % 10, false, true);\n            }\n        };\n        WWA.prototype._setNextMessage = function (displayCenter) {\n            if (displayCenter === void 0) { displayCenter = false; }\n            this._clearFacesInNextFrame = true;\n            if (this._scoreWindow.isVisible()) {\n                this._scoreWindow.hide();\n            }\n            if (this._lastMessage.isEndOfPartsEvent && this._reservedMoveMacroTurn !== void 0) {\n                this._player.setMoveMacroWaiting(this._reservedMoveMacroTurn);\n                this._reservedMoveMacroTurn = void 0;\n            }\n            if (this._messageQueue.length === 0) {\n                this._hideMessageWindow();\n            }\n            else {\n                var mi = this._messageQueue.shift();\n                var message = mi.message;\n                var macro = mi.macro;\n                this._lastMessage = mi;\n                for (var i = 0; i < macro.length; i++) {\n                    this._execMacroListInNextFrame.push(macro[i]);\n                }\n                if (message !== \"\") {\n                    this._messageWindow.hide();\n                    this._messageWindow.setMessage(message);\n                    this._messageWindow.setPositionByPlayerPosition(this._faces.length !== 0, this._scoreWindow.isVisible(), displayCenter, this._player.getPosition(), this._camera.getPosition());\n                    this._messageWindow.show();\n                }\n                else {\n                    if (this._messageQueue.length === 0) {\n                        this._hideMessageWindow();\n                    }\n                    else {\n                        this._setNextMessage();\n                    }\n                }\n            }\n        };\n        WWA.prototype._hideMessageWindow = function (messageDisplayed) {\n            if (messageDisplayed === void 0) { messageDisplayed = true; }\n            var itemID = 0;\n            if (this._player.isReadyToUseItem()) {\n                itemID = this._player.useItem();\n            }\n            var mesID = this.getObjectAttributeById(itemID, Consts.ATR_STRING);\n            this.clearFaces();\n            if (mesID === 0) {\n                if (messageDisplayed) {\n                    this._messageWindow.hide();\n                    this._keyStore.allClear();\n                    this._mouseStore.clear();\n                }\n                this._player.clearMessageWaiting();\n            }\n            else {\n                this.setMessageQueue(this.getMessageById(mesID), false, false, itemID, wwa_data.PartsType.OBJECT, this._player.getPosition().getPartsCoord(), true);\n            }\n        };\n        WWA.prototype.replaceParts = function (srcID, destID, partsType, onlyThisSight) {\n            if (partsType === void 0) { partsType = wwa_data.PartsType.OBJECT; }\n            if (onlyThisSight === void 0) { onlyThisSight = false; }\n            var cpParts = this._camera.getPosition().getPartsCoord();\n            var xLeft = onlyThisSight ? Math.max(0, cpParts.x) : 0;\n            var xRight = onlyThisSight ? Math.min(this._wwaData.mapWidth - 1, cpParts.x + Consts.H_PARTS_NUM_IN_WINDOW - 1) : this._wwaData.mapWidth - 1;\n            var yTop = onlyThisSight ? Math.max(0, cpParts.y) : 0;\n            var yBottom = onlyThisSight ? Math.min(this._wwaData.mapWidth - 1, cpParts.y + Consts.V_PARTS_NUM_IN_WINDOW) - 1 : this._wwaData.mapWidth - 1;\n            for (var x = xLeft; x <= xRight; x++) {\n                for (var y = yTop; y <= yBottom; y++) {\n                    if (partsType === wwa_data.PartsType.OBJECT) {\n                        var pid = this._wwaData.mapObject[y][x];\n                        if (pid === srcID) {\n                            this._wwaData.mapObject[y][x] = destID;\n                        }\n                    }\n                    else {\n                        var pid = this._wwaData.map[y][x];\n                        if (pid === srcID) {\n                            this._wwaData.map[y][x] = destID;\n                        }\n                    }\n                }\n            }\n        };\n        WWA.prototype.getYesNoImgCoord = function () {\n            return new Coord(this._wwaData.yesnoImgPosX, this._wwaData.yesnoImgPosY);\n        };\n        WWA.prototype.setYesNoImgCoord = function (coord) {\n            this._wwaData.yesnoImgPosX = coord.x;\n            this._wwaData.yesnoImgPosY = coord.y;\n            return coord;\n        };\n        WWA.prototype.getPlayerImgCoord = function () {\n            return new Coord(this._wwaData.playerImgPosX, this._wwaData.playerImgPosY);\n        };\n        WWA.prototype.setPlayerImgCoord = function (coord) {\n            this._wwaData.playerImgPosX = coord.x;\n            this._wwaData.playerImgPosY = coord.y;\n            return coord;\n        };\n        WWA.prototype.setPlayerEnergyMax = function (eng) {\n            return this._player.setEnergyMax(eng);\n        };\n        WWA.prototype.getMapPartsNum = function () {\n            return this._wwaData.mapPartsMax;\n        };\n        WWA.prototype.getObjectPartsNum = function () {\n            return this._wwaData.objPartsMax;\n        };\n        WWA.prototype.setMoveMacroWaitingToPlayer = function (moveNum) {\n            this._reservedMoveMacroTurn = moveNum;\n        };\n        WWA.prototype.disableSave = function (flag) {\n            return this._wwaData.disableSaveFlag = flag;\n        };\n        WWA.prototype.isOldMap = function () {\n            return this._wwaData.isOldMap;\n        };\n        WWA.prototype.setOldMap = function (flag) {\n            return this._wwaData.isOldMap = flag;\n        };\n        WWA.prototype.setObjectNotCollapseOnPartsOnPlayer = function (flag) {\n            return this._wwaData.objectNoCollapseDefaultFlag = flag;\n        };\n        WWA.prototype.setGameOverPosition = function (pos) {\n            if (pos.x < 0 || pos.x >= this.getMapWidth() || pos.y < 0 || pos.y >= this.getMapWidth()) {\n                throw new Error(\"マップの範囲外が指定されています!\");\n            }\n            this._wwaData.gameoverX = pos.x;\n            this._wwaData.gameoverY = pos.y;\n            return pos;\n        };\n        WWA.prototype.setPlayerStatus = function (type, value) {\n            if (type === wwa_data.MacroStatusIndex.ENERGY) {\n                this._player.setEnergy(value);\n            }\n            else if (type === wwa_data.MacroStatusIndex.STRENGTH) {\n                this._player.setStrength(value);\n            }\n            else if (type === wwa_data.MacroStatusIndex.DEFENCE) {\n                this._player.setDefence(value);\n            }\n            else if (type === wwa_data.MacroStatusIndex.GOLD) {\n                this._player.setGold(value);\n            }\n            else if (type === wwa_data.MacroStatusIndex.MOVES) {\n                this._player.setMoveCount(value);\n            }\n            else {\n                throw new Error(\"未定義のステータスタイプです\");\n            }\n        };\n        WWA.prototype.setDelPlayer = function (flag) {\n            return this._wwaData.delPlayerFlag = flag;\n        };\n        WWA.prototype.setPlayerGetItem = function (pos, id) {\n            try {\n                this._player.addItem(id, pos, true);\n            }\n            catch (e) {\n            }\n        };\n        WWA.prototype.setFrameCoord = function (coord) {\n            return this._frameCoord = coord.clone();\n        };\n        WWA.prototype.setBattleEffectCoord = function (coord) {\n            return this._battleEffectCoord = coord.clone();\n        };\n        WWA.prototype.canInput = function () {\n            return !this._temporaryInputDisable;\n        };\n        WWA.prototype.setWaitTime = function (time) {\n            this._waitTimeInCurrentFrame += time;\n            this._temporaryInputDisable = true;\n        };\n        WWA.prototype.setEffect = function (waits, coords) {\n            this._wwaData.effectWaits = waits;\n            this._wwaData.effectCoords = coords;\n        };\n        WWA.prototype.stopEffect = function () {\n            this._wwaData.effectCoords = [];\n        };\n        WWA.prototype.setImgClick = function (pos) {\n            this._wwaData.imgClickX = pos.x;\n            this._wwaData.imgClickY = pos.y;\n            if (pos.equals(new Coord(0, 0))) {\n                Array.prototype.forEach.call(wwa_util.$qsAll(\".item-cell>.item-click-border\"), function (node) {\n                    node.style.backgroundImage = \"url('\" + wwa_data.WWAConsts.ITEM_BORDER_IMG_DATA_URL + \"')\";\n                    node.style.backgroundPosition = \"0 0\";\n                });\n            }\n            else {\n                var escapedFilename = this._wwaData.mapCGName.replace(\"(\", \"\\\\(\").replace(\")\", \"\\\\)\");\n                Array.prototype.forEach.call(wwa_util.$qsAll(\".item-cell>.item-click-border\"), function (node) {\n                    node.style.backgroundImage = \"url('\" + escapedFilename + \"')\";\n                    node.style.backgroundPosition = \"-\" + pos.x * Consts.CHIP_SIZE + \"px -\" + pos.y * Consts.CHIP_SIZE + \"px\";\n                });\n            }\n        };\n        WWA.prototype.addFace = function (face) {\n            this._faces.push(face);\n        };\n        WWA.prototype.clearFaces = function () {\n            this._faces = [];\n        };\n        WWA.prototype.initCSSRule = function () {\n            this._styleElm = wwa_util.$id(Consts.WWA_STYLE_TAG_ID);\n            this._sheet = this._styleElm.sheet;\n            this.updateCSSRule();\n        };\n        WWA.prototype.updateCSSRule = function () {\n            var messageOpacity = this._isClassicModeEnable ? 1 : 0.9;\n            if (this._stylePos === void 0) {\n                this._stylePos = new Array(2);\n            }\n            else {\n                if (this._sheet.addRule !== void 0) {\n                    for (var i = 0; i < this._stylePos.length; i++) {\n                        this._sheet.removeRule(this._stylePos[this._styleElm[i]]);\n                    }\n                }\n                else {\n                    for (var i = 0; i < this._stylePos.length; i++) {\n                        this._sheet.deleteRule(this._stylePos[this._styleElm[i]]);\n                    }\n                }\n            }\n            if (this._sheet.addRule !== void 0) {\n                this._stylePos[wwa_data.SelectorType.MESSAGE_WINDOW] = this._sheet.addRule(\"div.wwa-message-window, div#wwa-battle-estimate, div#wwa-password-window\", \"background-color: rgba(\" + this._wwaData.frameColorR + \",\" + this._wwaData.frameColorG + \",\" + this._wwaData.frameColorB + \", \" + messageOpacity + \");\" +\n                    \"border-color: rgba(\" + this._wwaData.frameOutColorR + \",\" + this._wwaData.frameOutColorG + \",\" + this._wwaData.frameOutColorB + \", 1);\" +\n                    \"color: rgba(\" + this._wwaData.fontColorR + \",\" + this._wwaData.fontColorG + \",\" + this._wwaData.fontColorB + \", 1);\");\n                this._stylePos[wwa_data.SelectorType.SIDEBAR] = this._sheet.addRule(\"div#wwa-sidebar\", \"color: rgba(\" + this._wwaData.statusColorR + \",\" + this._wwaData.statusColorG + \",\" + this._wwaData.statusColorB + \",1);\" +\n                    \"font-weight: bold;\");\n            }\n            else {\n                this._stylePos[wwa_data.SelectorType.MESSAGE_WINDOW] = this._sheet.insertRule(\"div.wwa-message-window, div#wwa-battle-estimate, div#wwa-password-window {\\n\" +\n                    \"background-color: rgba(\" + this._wwaData.frameColorR + \",\" + this._wwaData.frameColorG + \",\" + this._wwaData.frameColorB + \", \" + messageOpacity + \");\\n\" +\n                    \"border-color: rgba(\" + this._wwaData.frameOutColorR + \",\" + this._wwaData.frameOutColorG + \",\" + this._wwaData.frameOutColorB + \", 1);\\n\" +\n                    \"color: rgba(\" + this._wwaData.fontColorR + \",\" + this._wwaData.fontColorG + \",\" + this._wwaData.fontColorB + \", 1);\\n\" +\n                    \"}\", 0);\n                this._stylePos[wwa_data.SelectorType.SIDEBAR] = this._sheet.insertRule(\"div#wwa-sidebar {\\n\" +\n                    \"color: rgba(\" + this._wwaData.statusColorR + \",\" + this._wwaData.statusColorG + \",\" + this._wwaData.statusColorB + \",1);\\n\" +\n                    \"font-weight: bold;\\n\" +\n                    \"}\", 1);\n            }\n        };\n        WWA.prototype.changeStyleRule = function (type, r, g, b) {\n            if (type === wwa_data.ChangeStyleType.COLOR_FRAME) {\n                this._wwaData.frameColorR = r;\n                this._wwaData.frameColorG = g;\n                this._wwaData.frameColorB = b;\n            }\n            else if (type === wwa_data.ChangeStyleType.COLOR_FRAMEOUT) {\n                this._wwaData.frameOutColorR = r;\n                this._wwaData.frameOutColorG = g;\n                this._wwaData.frameOutColorB = b;\n            }\n            else if (type === wwa_data.ChangeStyleType.COLOR_STR) {\n                this._wwaData.fontColorR = r;\n                this._wwaData.fontColorG = g;\n                this._wwaData.fontColorB = b;\n            }\n            else if (type === wwa_data.ChangeStyleType.COLOR_STATUS_STR) {\n                this._wwaData.statusColorR = r;\n                this._wwaData.statusColorG = g;\n                this._wwaData.statusColorB = b;\n            }\n            this.updateCSSRule();\n        };\n        WWA.prototype.showMonsterWindow = function () {\n            this._monsterWindow.show();\n        };\n        WWA.prototype.isClassicMode = function () {\n            return this._isClassicModeEnable;\n        };\n        WWA.prototype.isConsoleOutputMode = function () {\n            return this._useConsole;\n        };\n        return WWA;\n    }());\n    wwa_main.WWA = WWA;\n    ;\n    var isCopyRightClick = false;\n    function start() {\n        if (window[\"wwap_mode\"] === void 0) {\n            wwap_mode = false;\n        }\n        Array.prototype.forEach.call(util.$qsAll(\"a.wwa-copyright\"), function (node) {\n            node.addEventListener(\"click\", function () {\n                isCopyRightClick = true;\n            });\n        });\n        window.addEventListener(\"beforeunload\", function (e) {\n            var mes = \"このページを離れますか？\";\n            if (isCopyRightClick) {\n                isCopyRightClick = false;\n                e.returnValue = mes;\n                return mes;\n            }\n        });\n        var titleImgName = wwap_mode ?\n            null :\n            util.$id(\"wwa-wrapper\").getAttribute(\"data-wwa-title-img\");\n        wwa_inject_html.inject(util.$id(\"wwa-wrapper\"), titleImgName);\n        var mapFileName = util.$id(\"wwa-wrapper\").getAttribute(\"data-wwa-mapdata\");\n        var loaderFileName = util.$id(\"wwa-wrapper\").getAttribute(\"data-wwa-loader\");\n        var audioDirectory = util.$id(\"wwa-wrapper\").getAttribute(\"data-wwa-audio-dir\");\n        var urlgateEnabled = true;\n        if (util.$id(\"wwa-wrapper\").getAttribute(\"data-wwa-urlgate-enable\").match(/^false$/i)) {\n            urlgateEnabled = false;\n        }\n        var classicModeAttribute = util.$id(\"wwa-wrapper\").getAttribute(\"data-wwa-classic-mode-enable\");\n        var classicModeEnabled = false;\n        if (classicModeAttribute !== null && classicModeAttribute.match(/^true$/i)) {\n            classicModeEnabled = true;\n        }\n        wwa = new WWA(mapFileName, loaderFileName, urlgateEnabled, titleImgName, classicModeEnabled, audioDirectory);\n    }\n    if (document.readyState === \"complete\") {\n        start();\n    }\n    else {\n        window.addEventListener(\"load\", start);\n    }\n})(wwa_main || (wwa_main = {}));\n\n\n//# sourceURL=webpack:///./src/wwa_main.ts?");

/***/ })

/******/ });