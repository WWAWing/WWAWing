
//////////////////////////////////////////////////////////////////////
// はじめに

この拡張クラスはＷＷＡ本体のシステムをマップ作成者が自由に拡張できるようにするためのものです。
使用にはJavaプログラミングに関する知識が必要です。

まず「extend.html」をブラウザで開いて拡張クラスのサンプルマップを見てみてください。

「WWAextendSub.java」がＷＷＡ拡張クラスのソースファイルになっています。
これをテキストエディタで開いて中身を見てみてください。
条件分岐などのJavaの構文はネットの関連サイトを見るか図書館で専門書籍を借りてくるなどして調べてください。

拡張クラス用のＷＷＡ本体「WWAextend.class」と拡張クラス「WWAextendSub.class」の２つを同じフォルダに入れて、
「WWA.class」と同じようにHTMLから「WWAextend.class」を呼び出すと拡張クラスによるＷＷＡシステムが起動します。


//////////////////////////////////////////////////////////////////////
// コンパイルの仕方（WWAextendSub.classの作成方法）

Javaのソースファイルをコンパイルする（CLASSファイルを作成する）ためのツールは無償で提供されています。
プログラム経験がなくても中学生程度の読解力があれば、少し内容をいじるぐらいなら難しくないと思います。
まずはソースファイル「WWAextendSub.java」をコンパイルして
「WWAextendSub.class」を作成するところから挑戦してみてください。
コンパイルするだけならプログラムの知識は不要です。

コンパイルにはSunが配布している「Java SDK」という開発ツールを使いますが、解凍ソフトのようには簡単に扱えないので、
JAVAソースファイルのコンパイルを簡単にするサポートツールのようなものも多く作られています。
詳細はGoogleなどで「java コンパイル ツール」などのキーワードで検索してみてください。
「CPad for Java」や「MagCup」などのツールがあります。

そのままコンパイルするとＷＷＡ本体の「WWAextend.class」が
同時に上書きされて中身のないファイルになります（ファイルサイズを確認）ので、
「WWAextend.class」はファイルのプロパティで上書き禁止にしてしまってください。


//////////////////////////////////////////////////////////////////////
// 細かい注意事項

クラス間の変数受け渡しのためにstatic変数を使っている関係で、
拡張クラスを使用したＷＷＡを同じフォルダから複数同時に起動すると干渉しあって誤動作します。

CLASS作成時にはJava1.1対応モードでコンパイルすることを推奨します。
標準ではJava1.5などの最新版のバージョンでコンパイルされますが、
「Microsoft JavaVM」など古いJava実行環境では起動ができなくなります。
コマンドラインから「javac.exe -target 1.1」などのオプションでJava1.1対応のCLASSファイルが作成できます。


//////////////////////////////////////////////////////////////////////
// 各種仕様

拡張クラスについては、検証項目が膨大になるので本格的な機能の検証はこれからです。
仕様の確定についてもまだこれからです。

ReturnMessageに関する仕様
メッセージ、扉、アイテム、ステータス変化パーツに触ったときに起こるイベントで、
ReturnMessageを返したときの挙動は現在のものをおおよその確定仕様とします。
バージョンアップしても出来うる限り挙動の変わらないようにするつもりです。
それ以外のモンスターやＹｅｓＮｏ選択パーツでは、現在、ReturnMessageは使えません。仕様も未確定です。

GlobalMessage[メッセージ番号]に関する仕様
作成ツール側でパーツにメッセージをなにも入力しなかったときは、メッセージ番号は０に割り当てられています。
そのため拡張クラス側でパーツのメッセージを書き加えても表示されません。
ＹｅｓＮｏ選択パーツなどで表示するメッセージに手を加えたいときは、
なんでも良いので作成ツール側でメッセージを入力しておくことが必要です。

各種ステータスの変更
Mode=0〜2までの条件文内部で各種ステータスの変更をおこなった場合の挙動は現在のものを確定仕様とします。
Mode=3（画面描画中）に変数配列Valiable以外の各種ステータスを変更することは推奨しません。

変数配列Valiableの９０番目から９９番目までは将来的に別のデータを渡すときに使用される可能性があります。
システム予約なので使用しないほうが無難です。

